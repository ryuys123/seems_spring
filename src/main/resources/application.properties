# python
python.ai.server.url=http://localhost:5000

# face login settings
face.model-name=VGG-Face
face.distance-metric=cosine
face.similarity-threshold=0.6
face.python-service-url=http://localhost:5000
face.face-recognition-endpoint=/api/face/recognize
face.face-feature-endpoint=/api/face/extract
face.max-image-size=1048576
face.enable-face-login=true
face.max-login-attempts=5
face.lockout-duration=300

# DeepFace service URL
deepface.service.url=http://localhost:5000

# contextpath
spring.application.name=seems

# server port (default port :  8080)
server.port=8888
server.servlet.context-path=/seems

# encoding
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force=true
server.servlet.encoding.enabled=true

# dbms connect
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:XE
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.username=c##seems
spring.datasource.password=seems

# log
logging.level.root = info
logging.level.org.hibernate=info

# jpa setting
spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database=oracle
spring.jpa.database-platform=org.hibernate.dialect.OracleDialect
spring.jpa.properties.hibernate.id.new_generator_mappings=false
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=trace
logging.level.org.hibernate.sql=debug

# view : jsp setting view resolver
spring.web.resources.cache.period=0
spring.web.resources.chain.cache=false

# fileupload limited file size
file.upload-dir=C:/upload_files
# sub path : notice, board, photo etc....

# fileupload save folder
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# json serializable error setting
spring.jackson.serialization.fail-on-empty-beans=false
# notice_title, user_id
#spring.jackson.property-naming-strategy=SNAKE_CASE


# static access folder settings
spring.web.resources.add-mappings=true
spring.mvc.static-path-pattern=/**
spring.web.resources.static-locations=classpath:/static/,file:/C:/upload_files
# ??? ?????? ?? (.requestMatchers("/**/{spring:[a-zA-Z0-9-_]+}").permitAll() ??? ??)
spring.mvc.pathmatch.matching-strategy=path-pattern-parser

# jwt secritkey : alphabetic, numeric, = (option), +, / 32byte make
# base64 strings
jwt.secret=vrDt6Hhffv9gPPEEHDBVhxY4W+gf//bxDgVljRr/+8z1ZxqEdgTmDDZ/UIquJuWQdZmJ8mz/DuzLF/pmcMFaqw==

# access token 30minute (1800000 : 30min * 60sec * 1000millisec)
jwt.access_expiration=1800000

#테스트용
# access token 1minute
#jwt.access_expiration=60000

# refresh token 1day (24h * 60min * 60sec * 1000milisec: 86400000)
jwt.refresh_expiration=84600000

# 테스트용
# refresh token
#jwt.refresh_expiration=60000

# Coolsms API 설정
coolsms.api.key=NCSLIKRIQ9CUYESD
coolsms.api.secret=TYSROOMKSJDBWAYB4T9RETODXISFN4QD
coolsms.sender=01028258251

# OAuth2 Social Login Settings
# Google OAuth2
#oauth2.google.client-id=88204759456-9e7upkfu68je4ub0r2kqa0q93ih4684b.apps.googleusercontent.com
#oauth2.google.client-secret=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
#oauth2.google.redirect-uri=http://localhost:8888/seems/auth/social/callback
#oauth2.google.scope=openid email profile

# Google OAuth2
oauth2.google.client-id=879071102220-nueg754t7m080rhmufebf5rejv29n3lt.apps.googleusercontent.com
oauth2.google.client-secret=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
oauth2.google.redirect-uri=http://localhost:8888/seems/auth/social/callback
oauth2.google.scope=openid email profile

# Naver OAuth2
#oauth2.naver.client-id=0ZekT2rsq3OALah3xByD
#oauth2.naver.client-secret=VGCtIlxG_b
#oauth2.naver.redirect-uri=http://localhost:8888/seems/auth/social/callback

# Naver OAuth2
oauth2.naver.client-id=uKWQhJvKZ2Po7xv32GkC
oauth2.naver.client-secret=YcWGly3Ipn
oauth2.naver.redirect-uri=http://localhost:8888/seems/auth/social/callback

# Kakao OAuth2
oauth2.kakao.client-id=6fd73c26022e89b4cff8d5f3465ca37e
oauth2.kakao.client-secret=vNAjWYB4dTrF4jKPtYawFcLfVeFhCTVr
oauth2.kakao.redirect-uri=http://localhost:8888/seems/auth/social/callback
oauth2.kakao.scope=profile_nickname,profile_image

