-- 시퀀스 드롭

--DROP SEQUENCE SEQ_USERS_USER_ID;
DROP SEQUENCE SEQ_REFRESH_TOKENS_ID;
DROP SEQUENCE SEQ_USER_SOCIAL_LOGIN_SOCIAL_LOGIN_ID;
DROP SEQUENCE SEQ_USER_FACE_LOGIN_FACE_LOGIN_ID;
DROP SEQUENCE SEQ_LOGIN_HISTORY_LOGIN_HISTORY_ID;
DROP SEQUENCE SEQ_COUNSELING_SESSIONS_SESSION_ID;
DROP SEQUENCE SEQ_COUNSELING_MESSAGES_MESSAGE_ID;
DROP SEQUENCE SEQ_COUNSELING_ANALYSIS_SUMMARIES_SUMMARY_ID;
DROP SEQUENCE SEQ_GUIDANCE_TYPES_GUIDANCE_TYPE_ID;
DROP SEQUENCE SEQ_EMOTIONS_EMOTION_ID;
DROP SEQUENCE SEQ_EMOTION_LOGS_EMOTION_LOG_ID;
DROP SEQUENCE SEQ_TEST_QUESTIONS_QUESTION_ID;
DROP SEQUENCE SEQ_PERSONALITY_TEST_ANSWERS_ANSWER_ID;
DROP SEQUENCE SEQ_PERSONALITY_ANALYSIS_PERSONALITY_ID;
DROP SEQUENCE SEQ_PSYCHOLOGICAL_TEST_ANSWERS_ANSWER_ID;
DROP SEQUENCE SEQ_PSYCHOLOGICAL_ANALYSIS_PSYCHO_ID;
DROP SEQUENCE SEQ_USER_ANALYSIS_SUMMARY_USER_SUMMARY_ID;
DROP SEQUENCE SEQ_QUEST_QUEST_ID;
DROP SEQUENCE SEQ_QUEST_REWARDS_QUEST_ID;
DROP SEQUENCE SEQ_CONTENTS_CONTENT_ID;
DROP SEQUENCE SEQ_SIMULATION_SCENARIOS_SCENARIO_ID;
DROP SEQUENCE SEQ_SIMULATION_SETTINGS_SETTING_ID;
DROP SEQUENCE SEQ_SIMULATION_QUESTIONS_QUESTION_ID;
DROP SEQUENCE SEQ_SIMULATION_CHOICES_CHOICE_ID;
DROP SEQUENCE SEQ_SIMULATION_RESULTS_RESULT_ID;
DROP SEQUENCE SEQ_NOTICES_NOTICE_NO;
DROP SEQUENCE SEQ_INQUIRIES_INQUIRY_ID;
DROP SEQUENCE SEQ_COMMENTS_COMMENT_ID;
DROP SEQUENCE SEQ_SYSTEM_LOGS_LOG_ID;
DROP SEQUENCE SEQ_ANALYSIS_TYPES_ANALYSIS_TYPE_ID;
DROP SEQUENCE SEQ_PERSONALITY_TESTS_PERSONALITY_TEST_ID;
DROP SEQUENCE SEQ_PSYCHOLOGICAL_TESTS_PSYCHO_TEST_ID;
DROP SEQUENCE SEQ_CONTENT_RECOMMENDATIONS_RECOMMENDATION_ID;
DROP SEQUENCE SEQ_USER_REWARDS_USER_REWARD_ID;
-- 추가
DROP SEQUENCE SEQ_PSYCH_IMAGE_ANSWERS_AID;
DROP SEQUENCE SEQ_PSYCH_SCALE_RESULTS_RID;
DROP SEQUENCE SEQ_PSYCH_IMAGE_RESULTS_RID;
DROP SEQUENCE SEQ_PSYCH_SCALE_ANSWERS_AID;
DROP SEQUENCE PSYCHOLOGICAL_ANSWER_SEQ;
DROP SEQUENCE PSYCHOLOGICAL_ANALYSIS_SEQ;
DROP SEQUENCE ANSWER_SEQ;
DROP SEQUENCE RESULT_SEQ;
DROP SEQUENCE QUESTION_SEQ;
DROP SEQUENCE SIM_RESULT_SEQ;
DROP SEQUENCE SETTING_SEQ;
DROP SEQUENCE TB_PERSONALITY_ANALYSIS_SEQ;
DROP SEQUENCE SCENARIO_SEQ;
DROP SEQUENCE SEQ_QUEST_ACTIVITIES_ACTIVITY_ID;
DROP SEQUENCE SEQ_QUEST_STEPS_STEP_ID;
DROP SEQUENCE SEQ_QUEST_RECOMMENDATIONS_RECOMMENDATION_ID;
DROP SEQUENCE SEQ_USER_QUEST_STATS_STAT_ID;
DROP SEQUENCE TB_SIMULATION_USER_RESULTS_SEQ;
DROP SEQUENCE TB_SIMULATION_RESULTS_SEQ;
DROP SEQUENCE SEQ_COMMON_QUESTIONS_QID;
DROP SEQUENCE SEQ_TB_SIMULATION_USER_RESULTS_ID;
DROP SEQUENCE SEQ_PSYCHOLOGY_CARD;
DROP SEQUENCE SEQ_USER_CARD_HISTORY_ID;

-- 테이블 드롭 (외래키 참조 순서 고려)

-- 자식 테이블들 먼저 삭제
DROP TABLE TB_QUEST CASCADE CONSTRAINTS;
DROP TABLE TB_PERSONALITY_ANSWERS CASCADE CONSTRAINTS;
DROP TABLE TB_PSYCHOLOGICAL_IMAGE_ANSWERS CASCADE CONSTRAINTS;
DROP TABLE TB_SIMULATION_CHOICES CASCADE CONSTRAINTS;
DROP TABLE TB_SIMULATION_RESULTS CASCADE CONSTRAINTS;
DROP TABLE TB_USER_ANALYSIS_SUMMARY CASCADE CONSTRAINTS;
DROP TABLE TB_PERSONALITY_RESULTS CASCADE CONSTRAINTS;
DROP TABLE TB_PSYCHOLOGICAL_IMAGE_RESULTS CASCADE CONSTRAINTS;
DROP TABLE TB_COUNSELING_MESSAGES CASCADE CONSTRAINTS;
DROP TABLE TB_COUNSELING_ANALYSIS_SUMMARIES CASCADE CONSTRAINTS;
DROP TABLE TB_SIMULATION_SETTINGS CASCADE CONSTRAINTS;
DROP TABLE TB_SIMULATION_QUESTIONS CASCADE CONSTRAINTS;
DROP TABLE TB_EMOTION_LOGS CASCADE CONSTRAINTS;
DROP TABLE TB_COUNSELING_SESSIONS CASCADE CONSTRAINTS;
DROP TABLE TB_LOGIN_HISTORY CASCADE CONSTRAINTS;
DROP TABLE TB_USER_SOCIAL_LOGIN CASCADE CONSTRAINTS;
DROP TABLE TB_USER_FACE_LOGIN CASCADE CONSTRAINTS;
DROP TABLE TB_CONTENTS CASCADE CONSTRAINTS;
DROP TABLE TB_COMMENTS CASCADE CONSTRAINTS;
DROP TABLE TB_INQUIRIES CASCADE CONSTRAINTS;
DROP TABLE TB_SYSTEM_LOGS CASCADE CONSTRAINTS;
DROP TABLE TB_COMMON_QUESTIONS CASCADE CONSTRAINTS;
DROP TABLE TB_USER_REWARDS CASCADE CONSTRAINTS;
DROP TABLE TB_QUEST_REWARDS CASCADE CONSTRAINTS;
DROP TABLE TB_USER_POINTS CASCADE CONSTRAINTS;
DROP TABLE TB_SIMULATION_SCENARIOS CASCADE CONSTRAINTS;
DROP TABLE TB_NOTICES CASCADE CONSTRAINTS;
DROP TABLE TB_EMOTIONS CASCADE CONSTRAINTS;
DROP TABLE TB_GUIDANCE_TYPES CASCADE CONSTRAINTS;
DROP TABLE TB_REFRESH_TOKENS CASCADE CONSTRAINTS;
DROP TABLE TB_QUEST_STEPS CASCADE CONSTRAINTS;
DROP TABLE TB_QUEST_RECOMMENDATIONS CASCADE CONSTRAINTS;
DROP TABLE TB_USER_QUEST_STATS CASCADE CONSTRAINTS;
DROP TABLE TB_PSYCHOLOGICAL_SCALE_ANSWERS CASCADE CONSTRAINTS;
DROP TABLE TB_PSYCHOLOGICAL_SCALE_RESULTS CASCADE CONSTRAINTS;
DROP TABLE TB_PERSONALITY_TEST_ANSWERS CASCADE CONSTRAINTS;
DROP TABLE TB_PSYCHOLOGICAL_TEST_ANSWERS CASCADE CONSTRAINTS;
DROP TABLE TB_PERSONALITY_ANALYSIS CASCADE CONSTRAINTS;
DROP TABLE TB_PSYCHOLOGICAL_ANALYSIS CASCADE CONSTRAINTS;
DROP TABLE TB_TEST_QUESTIONS CASCADE CONSTRAINTS;
DROP TABLE TB_SIMULATION_USER_RESULTS CASCADE CONSTRAINTS;
DROP TABLE TB_QUEST_STEPS CASCADE CONSTRAINTS;
DROP TABLE TB_EMOTION_QUEST_RECOMM CASCADE CONSTRAINTS;
DROP TABLE TB_QUEST_RECOMMENDATIONS CASCADE CONSTRAINTS;
DROP TABLE TB_USER_QUEST_STATS CASCADE CONSTRAINTS;
DROP TABLE TB_EMOTION_CONTENT_RECOMM CASCADE CONSTRAINTS;
DROP TABLE TB_CONTENT_RECOMMENDATIONS CASCADE CONSTRAINTS;
DROP TABLE TB_PSYCHOLOGY_CARD CASCADE CONSTRAINTS;
DROP TABLE TB_USER_CARD_HISTORY CASCADE CONSTRAINTS;
DROP TABLE TB_USER_CARD_DESIGN CASCADE CONSTRAINTS;

-- 마지막에 부모 테이블 삭제
DROP TABLE TB_USERS CASCADE CONSTRAINTS;
DROP TABLE TB_QUEST_ACTIVITIES CASCADE CONSTRAINTS;



-- 시퀀스 생성

--CREATE SEQUENCE SEQ_USERS_USER_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_REFRESH_TOKENS_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_USER_SOCIAL_LOGIN_SOCIAL_LOGIN_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_USER_FACE_LOGIN_FACE_LOGIN_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_LOGIN_HISTORY_LOGIN_HISTORY_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_COUNSELING_SESSIONS_SESSION_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_COUNSELING_MESSAGES_MESSAGE_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_COUNSELING_ANALYSIS_SUMMARIES_SUMMARY_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_GUIDANCE_TYPES_GUIDANCE_TYPE_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_EMOTIONS_EMOTION_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_EMOTION_LOGS_EMOTION_LOG_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_TEST_QUESTIONS_QUESTION_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_PERSONALITY_TEST_ANSWERS_ANSWER_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_PERSONALITY_ANALYSIS_PERSONALITY_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_PSYCHOLOGICAL_TEST_ANSWERS_ANSWER_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_PSYCHOLOGICAL_ANALYSIS_PSYCHO_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_USER_ANALYSIS_SUMMARY_USER_SUMMARY_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_QUEST_QUEST_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_QUEST_REWARDS_QUEST_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_CONTENTS_CONTENT_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_SIMULATION_SCENARIOS_SCENARIO_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_SIMULATION_SETTINGS_SETTING_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_SIMULATION_QUESTIONS_QUESTION_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_SIMULATION_CHOICES_CHOICE_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_SIMULATION_RESULTS_RESULT_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_NOTICES_NOTICE_NO START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_INQUIRIES_INQUIRY_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_COMMENTS_COMMENT_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_SYSTEM_LOGS_LOG_ID START WITH 8 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_ANALYSIS_TYPES_ANALYSIS_TYPE_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_PERSONALITY_TESTS_PERSONALITY_TEST_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_PSYCHOLOGICAL_TESTS_PSYCHO_TEST_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_CONTENT_RECOMMENDATIONS_RECOMMENDATION_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
CREATE SEQUENCE SEQ_USER_REWARDS_USER_REWARD_ID START WITH 1 INCREMENT BY 1 CACHE 20 NOMAXVALUE;
-- 추가
CREATE SEQUENCE PSYCHOLOGICAL_ANALYSIS_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE
NOCYCLE;

CREATE SEQUENCE ANSWER_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE
NOCYCLE;

CREATE SEQUENCE RESULT_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE
NOCYCLE;

CREATE SEQUENCE PSYCHOLOGICAL_ANSWER_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE
NOCYCLE;

CREATE SEQUENCE QUESTION_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE
NOCYCLE;

CREATE SEQUENCE SIM_RESULT_SEQ
    START WITH 1
    INCREMENT BY 1;
commit;

CREATE SEQUENCE SETTING_SEQ
    START WITH 1
    INCREMENT BY 1;
commit;

CREATE SEQUENCE TB_PERSONALITY_ANALYSIS_SEQ
    START WITH 1
    INCREMENT BY 1;
commit;

CREATE SEQUENCE SCENARIO_SEQ START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
commit;

-- for TB_PSYCHOLOGICAL_IMAGE_ANSWERS
CREATE SEQUENCE SEQ_PSYCH_IMAGE_ANSWERS_AID START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
commit;

-- for TB_PSYCHOLOGICAL_IMAGE_RESULTS
CREATE SEQUENCE SEQ_PSYCH_IMAGE_RESULTS_RID START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
commit;

-- for TB_PSYCHOLOGICAL_SCALE_ANSWERS
CREATE SEQUENCE SEQ_PSYCH_SCALE_ANSWERS_AID START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
commit;

-- for TB_PSYCHOLOGICAL_SCALE_RESULTS
CREATE SEQUENCE SEQ_PSYCH_SCALE_RESULTS_RID START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
commit;


-- TB_SIMULATION_USER_RESULTS 테이블의 ID를 자동으로 생성해 줄 시퀀스 생성
CREATE SEQUENCE TB_SIMULATION_USER_RESULTS_SEQ
    START WITH 1
    INCREMENT BY 1;

CREATE SEQUENCE TB_SIMULATION_RESULTS_SEQ
    START WITH 1
    INCREMENT BY 1;

CREATE SEQUENCE SEQ_PSYCHOLOGY_CARD
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;

CREATE SEQUENCE SEQ_USER_CARD_HISTORY_ID
    START WITH 1           -- 시작 번호
    INCREMENT BY 1         -- 증가 폭
    NOCACHE                -- 캐시 없음 (원하는 경우 CACHE 20 등 사용 가능)
    NOCYCLE;               -- 최대값 도달 시 재사용하지 않음

-- 테이블 생성

-- 1. TB_USERS
CREATE TABLE TB_USERS (
                          USER_ID VARCHAR2(255) PRIMARY KEY,
                          PHONE VARCHAR2(100),
                          USER_PWD VARCHAR2(255),
                          USERNAME VARCHAR2(50) NOT NULL,
                          PROFILE_IMAGE VARCHAR2(500), -- 프로필 사진 (페이스 로그인과 별도)
                          EMAIL VARCHAR2(100), -- 이메일 (선택사항으로 변경)
                          FACE_LOGIN_ENABLED NUMBER(1) DEFAULT 0, -- 페이스 로그인 활성화 여부
                          CREATED_AT DATE DEFAULT SYSDATE NOT NULL,
                          UPDATED_AT DATE,
                          STATUS NUMBER(1) DEFAULT 1 NOT NULL,
                          ADMIN_YN VARCHAR2(1) DEFAULT 'N',

                          CONSTRAINT CHK_TB_USERS_STATUS CHECK (STATUS IN (1, 0, 2)),
                          CONSTRAINT CHK_ADMIN_YN CHECK (ADMIN_YN IN ('Y', 'N')),
                          CONSTRAINT CHK_FACE_LOGIN_ENABLED CHECK (FACE_LOGIN_ENABLED IN (1, 0))
);

COMMENT ON TABLE TB_USERS IS '사용자 계정 정보';
COMMENT ON COLUMN TB_USERS.USER_ID IS '사용자 고유 식별자';
COMMENT ON COLUMN TB_USERS.PHONE IS '전화번호';
COMMENT ON COLUMN TB_USERS.USER_PWD IS '해시된 비밀번호 (자체 로그인)';
COMMENT ON COLUMN TB_USERS.USERNAME IS '사용자 이름';
COMMENT ON COLUMN TB_USERS.PROFILE_IMAGE IS '프로필 사진 이미지 (페이스 로그인과 별도)';
COMMENT ON COLUMN TB_USERS.EMAIL IS '사용자 이메일 주소 (선택사항)';
COMMENT ON COLUMN TB_USERS.FACE_LOGIN_ENABLED IS '페이스 로그인 활성화 여부 (1: 활성, 0: 비활성)';
COMMENT ON COLUMN TB_USERS.CREATED_AT IS '계정 생성 시간';
COMMENT ON COLUMN TB_USERS.UPDATED_AT IS '계정 정보 수정 시간';
COMMENT ON COLUMN TB_USERS.STATUS IS '계정 상태 (1: 활성, 0: 탈퇴, 2: 비활성)';
COMMENT ON COLUMN TB_USERS.ADMIN_YN IS '관리자 권한 여부';

-- 2. TB_REFRESH_TOKENS
CREATE TABLE TB_REFRESH_TOKENS (
                                   ID VARCHAR2(36) PRIMARY KEY,
                                   USER_ID VARCHAR2(255) NOT NULL,
                                   TOKEN_VALUE VARCHAR2(255) NOT NULL UNIQUE,
                                   CONSTRAINT FK_RT_USER_ID FOREIGN KEY (USER_ID) REFERENCES TB_USERS(USER_ID) ON DELETE CASCADE
);

COMMENT ON COLUMN TB_REFRESH_TOKENS.ID IS '등록용 ID';
COMMENT ON COLUMN TB_REFRESH_TOKENS.USER_ID IS '사용자 고유 ID (외래키)';
COMMENT ON COLUMN TB_REFRESH_TOKENS.TOKEN_VALUE IS '리프레시 토큰 값';

-- 3. TB_USER_SOCIAL_LOGIN
CREATE TABLE TB_USER_SOCIAL_LOGIN (
                                      SOCIAL_LOGIN_ID NUMBER(19) PRIMARY KEY,
                                      USER_ID VARCHAR2(255) NOT NULL,
                                      PROVIDER VARCHAR2(50) NOT NULL,
                                      SOCIAL_ID VARCHAR2(100) NOT NULL,
                                      LINKED_AT DATE DEFAULT SYSDATE NOT NULL,

                                      CONSTRAINT FK_SOCIAL_USER FOREIGN KEY (USER_ID) REFERENCES TB_USERS(USER_ID),
                                      CONSTRAINT UK_SOCIAL_PROVIDER_ID UNIQUE (PROVIDER, SOCIAL_ID)
);

COMMENT ON TABLE TB_USER_SOCIAL_LOGIN IS '소셜 로그인 연동 정보';
COMMENT ON COLUMN TB_USER_SOCIAL_LOGIN.SOCIAL_LOGIN_ID IS '소셜 로그인 고유 식별자';
COMMENT ON COLUMN TB_USER_SOCIAL_LOGIN.USER_ID IS 'TB_USERS 테이블의 사용자 ID (FK)';
COMMENT ON COLUMN TB_USER_SOCIAL_LOGIN.PROVIDER IS '소셜 로그인 제공자 (예: GOOGLE, KAKAO)';
COMMENT ON COLUMN TB_USER_SOCIAL_LOGIN.SOCIAL_ID IS '소셜 로그인 플랫폼에서의 고유 ID';
COMMENT ON COLUMN TB_USER_SOCIAL_LOGIN.LINKED_AT IS '소셜 로그인 계정이 연동된 시간';

ALTER TABLE TB_USER_SOCIAL_LOGIN ADD SOCIAL_EMAIL VARCHAR2(100);

-- 4. TB_USER_FACE_LOGIN
CREATE TABLE TB_USER_FACE_LOGIN (
                                    FACE_LOGIN_ID NUMBER(19) PRIMARY KEY,
                                    USER_ID VARCHAR2(255) NOT NULL,
                                    FACE_ID_HASH VARCHAR2(255) NOT NULL,
                                    FACE_IMAGE_PATH VARCHAR2(500), -- 실제 이미지 파일 경로 (선택사항)
                                    FACE_NAME VARCHAR2(100), -- 얼굴 등록명 (예: "정면", "측면" 등)
                                    REGISTERED_AT DATE DEFAULT SYSDATE NOT NULL,
                                    LAST_USED_AT DATE,
                                    IS_ACTIVE NUMBER(1) DEFAULT 1 NOT NULL,
                                    CREATED_BY VARCHAR2(255), -- 등록한 사용자 (관리자 등록 시)

                                    CONSTRAINT FK_FACE_USER FOREIGN KEY (USER_ID) REFERENCES TB_USERS(USER_ID) ON DELETE CASCADE,
    -- CONSTRAINT UK_FACE_USER UNIQUE (USER_ID), -- 제거: 여러 얼굴 등록 허용
                                    CONSTRAINT CHK_FACE_ACTIVE CHECK (IS_ACTIVE IN (1, 0))
);

COMMENT ON TABLE TB_USER_FACE_LOGIN IS '사용자의 얼굴 인식 로그인 정보';
COMMENT ON COLUMN TB_USER_FACE_LOGIN.FACE_LOGIN_ID IS '얼굴 로그인 고유 식별자';
COMMENT ON COLUMN TB_USER_FACE_LOGIN.USER_ID IS 'TB_USERS 테이블의 사용자 ID (FK)';
COMMENT ON COLUMN TB_USER_FACE_LOGIN.FACE_ID_HASH IS '얼굴 특징값 해시 (민감정보 보호)';
COMMENT ON COLUMN TB_USER_FACE_LOGIN.FACE_IMAGE_PATH IS '얼굴 이미지 파일 경로 (선택사항)';
COMMENT ON COLUMN TB_USER_FACE_LOGIN.FACE_NAME IS '얼굴 등록명 (예: 정면, 측면)';
COMMENT ON COLUMN TB_USER_FACE_LOGIN.REGISTERED_AT IS '얼굴 로그인 등록 시간';
COMMENT ON COLUMN TB_USER_FACE_LOGIN.LAST_USED_AT IS '최근 얼굴 로그인 시도 시간';
COMMENT ON COLUMN TB_USER_FACE_LOGIN.IS_ACTIVE IS '얼굴 로그인 사용 상태 (1: 활성, 0: 비활성)';
COMMENT ON COLUMN TB_USER_FACE_LOGIN.CREATED_BY IS '얼굴 등록한 사용자 (관리자 등록 시)';


-- 5. TB_LOGIN_HISTORY
CREATE TABLE TB_LOGIN_HISTORY (
                                  LOGIN_HISTORY_ID NUMBER(19) PRIMARY KEY,
                                  USER_ID VARCHAR2(255) NOT NULL,
                                  LOGIN_TIME TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
                                  LOGOUT_TIME TIMESTAMP NULL,
                                  IP_ADDRESS VARCHAR2(45),
                                  USER_AGENT VARCHAR2(255),
                                  LOGIN_RESULT VARCHAR2(20) NOT NULL,
                                  CREATED_AT TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,

                                  CONSTRAINT FK_LOGIN_USER FOREIGN KEY (USER_ID) REFERENCES TB_USERS(USER_ID) ON DELETE CASCADE
);

COMMENT ON TABLE TB_LOGIN_HISTORY IS '사용자 로그인 이력 기록';
COMMENT ON COLUMN TB_LOGIN_HISTORY.LOGIN_HISTORY_ID IS '로그인 이력 고유 식별자';
COMMENT ON COLUMN TB_LOGIN_HISTORY.USER_ID IS 'TB_USERS 테이블의 사용자 ID 참조';
COMMENT ON COLUMN TB_LOGIN_HISTORY.LOGIN_TIME IS '로그인 시각';
COMMENT ON COLUMN TB_LOGIN_HISTORY.LOGOUT_TIME IS '로그아웃 시각';
COMMENT ON COLUMN TB_LOGIN_HISTORY.IP_ADDRESS IS '사용자 접속 IP 주소';
COMMENT ON COLUMN TB_LOGIN_HISTORY.USER_AGENT IS '사용자 브라우저 및 디바이스 정보';
COMMENT ON COLUMN TB_LOGIN_HISTORY.LOGIN_RESULT IS '로그인 결과 (예: SUCCESS, FAIL)';
COMMENT ON COLUMN TB_LOGIN_HISTORY.CREATED_AT IS '로그 생성 시각';



-- 6. TB_COUNSELING_SESSIONS
CREATE TABLE TB_COUNSELING_SESSIONS (
                                        SESSION_ID NUMBER(19) PRIMARY KEY,
                                        USER_ID VARCHAR2(255) NOT NULL,
                                        TOPIC VARCHAR2(100) NOT NULL,
                                        METHOD VARCHAR2(10) NOT NULL,
                                        START_TIME DATE NOT NULL,
                                        END_TIME DATE,
                                        CREATED_AT DATE DEFAULT SYSDATE NOT NULL,

                                        CONSTRAINT FK_COUNSELING_USER FOREIGN KEY (USER_ID) REFERENCES TB_USERS(USER_ID) ON DELETE CASCADE,
                                        CONSTRAINT CHK_COUNSELING_METHOD CHECK (METHOD IN ('TEXT', 'VOICE'))
);

COMMENT ON TABLE TB_COUNSELING_SESSIONS IS '상담 챗봇 세션 기록';
COMMENT ON COLUMN TB_COUNSELING_SESSIONS.SESSION_ID IS '상담 세션 고유 식별자';
COMMENT ON COLUMN TB_COUNSELING_SESSIONS.USER_ID IS 'TB_USERS 테이블의 사용자 ID 참조';
COMMENT ON COLUMN TB_COUNSELING_SESSIONS.TOPIC IS '상담 주제 (예: 연애, 자아성찰)';
COMMENT ON COLUMN TB_COUNSELING_SESSIONS.METHOD IS '상담 방식 (TEXT, VOICE)';
COMMENT ON COLUMN TB_COUNSELING_SESSIONS.START_TIME IS '세션 시작 시간';
COMMENT ON COLUMN TB_COUNSELING_SESSIONS.END_TIME IS '세션 종료 시간';
COMMENT ON COLUMN TB_COUNSELING_SESSIONS.CREATED_AT IS '세션 생성 시간';


-- 7. TB_COUNSELING_MESSAGES
CREATE TABLE TB_COUNSELING_MESSAGES (
                                        MESSAGE_ID NUMBER(19) PRIMARY KEY,
                                        SESSION_ID NUMBER(19) NOT NULL,
                                        SENDER VARCHAR2(50) NOT NULL,
                                        MESSAGE_TYPE VARCHAR2(10) DEFAULT 'TEXT' CHECK (MESSAGE_TYPE IN ('TEXT', 'VOICE', 'IMAGE')),
                                        MESSAGE_CONTENT VARCHAR2(2000),
                                        IMAGE_FILE_PATH VARCHAR2(255),
                                        MESSAGE_TIME DATE NOT NULL,
                                        CREATED_AT DATE DEFAULT SYSDATE NOT NULL,

                                        CONSTRAINT FK_MESSAGE_SESSION FOREIGN KEY (SESSION_ID) REFERENCES TB_COUNSELING_SESSIONS(SESSION_ID) ON DELETE CASCADE
);

COMMENT ON TABLE TB_COUNSELING_MESSAGES IS '상담 세션의 개별 메시지 기록';
COMMENT ON COLUMN TB_COUNSELING_MESSAGES.MESSAGE_ID IS '메시지 고유 식별자';
COMMENT ON COLUMN TB_COUNSELING_MESSAGES.SESSION_ID IS 'TB_COUNSELING_SESSIONS 테이블의 세션 ID 참조';
COMMENT ON COLUMN TB_COUNSELING_MESSAGES.SENDER IS '메시지 발신자 (예: USER, BOT)';
COMMENT ON COLUMN TB_COUNSELING_MESSAGES.MESSAGE_TYPE IS '메시지 유형 (TEXT, VOICE, IMAGE)';
COMMENT ON COLUMN TB_COUNSELING_MESSAGES.MESSAGE_CONTENT IS '메시지 텍스트 내용';
COMMENT ON COLUMN TB_COUNSELING_MESSAGES.IMAGE_FILE_PATH IS '이미지 파일 경로 (예: 표정 캡처)';
COMMENT ON COLUMN TB_COUNSELING_MESSAGES.MESSAGE_TIME IS '메시지 전송 시간';
COMMENT ON COLUMN TB_COUNSELING_MESSAGES.CREATED_AT IS '메시지 생성 시간';


-- 8. TB_GUIDANCE_TYPES
CREATE TABLE TB_GUIDANCE_TYPES (
                                   GUIDANCE_TYPE_ID NUMBER(19) PRIMARY KEY,
                                   GUIDANCE_TYPE_NAME VARCHAR2(100) NOT NULL,
                                   DESCRIPTION VARCHAR2(255),

                                   CONSTRAINT UK_GUIDANCE_TYPE_NAME UNIQUE (GUIDANCE_TYPE_NAME)
);

COMMENT ON TABLE TB_GUIDANCE_TYPES IS '상담 가이드 유형';
COMMENT ON COLUMN TB_GUIDANCE_TYPES.GUIDANCE_TYPE_ID IS '가이드 유형의 고유 식별자';
COMMENT ON COLUMN TB_GUIDANCE_TYPES.GUIDANCE_TYPE_NAME IS '가이드 유형 이름 (예: 자기성찰, 관계 개선)';
COMMENT ON COLUMN TB_GUIDANCE_TYPES.DESCRIPTION IS '가이드 유형에 대한 설명 (예: 유형의 목적 및 특징)';


-- 9. TB_COUNSELING_ANALYSIS_SUMMARIES
CREATE TABLE TB_COUNSELING_ANALYSIS_SUMMARIES (
                                                  SUMMARY_ID NUMBER(19) PRIMARY KEY,
                                                  SESSION_ID NUMBER(19) NOT NULL,
                                                  SUMMARY_TYPE VARCHAR2(20) NOT NULL CHECK (SUMMARY_TYPE IN ('TEXT', 'VOICE')),
                                                  GUIDANCE_TYPE_ID NUMBER(19) NOT NULL,
                                                  SUMMARY_CONTENT VARCHAR2(2000) NOT NULL,
                                                  CREATED_AT DATE DEFAULT SYSDATE NOT NULL,

                                                  CONSTRAINT FK_SUMMARY_SESSION FOREIGN KEY (SESSION_ID) REFERENCES TB_COUNSELING_SESSIONS(SESSION_ID) ON DELETE CASCADE,
                                                  CONSTRAINT FK_SUMMARY_GUIDANCE_TYPE FOREIGN KEY (GUIDANCE_TYPE_ID) REFERENCES TB_GUIDANCE_TYPES(GUIDANCE_TYPE_ID) ON DELETE CASCADE
);

COMMENT ON TABLE TB_COUNSELING_ANALYSIS_SUMMARIES IS '상담 분석 요약';
COMMENT ON COLUMN TB_COUNSELING_ANALYSIS_SUMMARIES.SUMMARY_ID IS '상담 요약의 고유 식별자';
COMMENT ON COLUMN TB_COUNSELING_ANALYSIS_SUMMARIES.SESSION_ID IS 'TB_COUNSELING_SESSIONS 테이블의 세션 ID 참조, 요약 대상 상담 세션';
COMMENT ON COLUMN TB_COUNSELING_ANALYSIS_SUMMARIES.SUMMARY_TYPE IS '상담 분석 타입 (TEXT: 텍스트 기반, VOICE: 음성 기반)';
COMMENT ON COLUMN TB_COUNSELING_ANALYSIS_SUMMARIES.GUIDANCE_TYPE_ID IS 'TB_GUIDANCE_TYPES 테이블의 가이드 유형 ID 참조, 상담 유형(예: 자기성찰, 관계 개선)';
COMMENT ON COLUMN TB_COUNSELING_ANALYSIS_SUMMARIES.SUMMARY_CONTENT IS 'AI가 생성한 요약된 상담 내용 (예: 대화 주제, 감정 분석)';
COMMENT ON COLUMN TB_COUNSELING_ANALYSIS_SUMMARIES.CREATED_AT IS '요약 생성 시간, 기본값 SYSDATE';


-- 10. TB_EMOTIONS
CREATE TABLE TB_EMOTIONS (
                             EMOTION_ID NUMBER(19) PRIMARY KEY,
                             EMOTION_NAME VARCHAR2(50) NOT NULL,
                             DESCRIPTION VARCHAR2(255),
                             CONSTRAINT UK_EMOTION_NAME UNIQUE (EMOTION_NAME)
);

COMMENT ON TABLE TB_EMOTIONS IS '감정 유형 관리';
COMMENT ON COLUMN TB_EMOTIONS.EMOTION_ID IS '감정 고유 식별자';
COMMENT ON COLUMN TB_EMOTIONS.EMOTION_NAME IS '감정 이름 (예: 기쁨, 슬픔, 분노)';
COMMENT ON COLUMN TB_EMOTIONS.DESCRIPTION IS '감정 설명';

-- TB_EMOTIONS 테이블에 감정 데이터 삽입
INSERT INTO TB_EMOTIONS (EMOTION_ID, EMOTION_NAME, DESCRIPTION) VALUES
    (SEQ_EMOTIONS_EMOTION_ID.NEXTVAL, '행복', '기쁨, 즐거움, 만족감 등 긍정적인 감정');
INSERT INTO TB_EMOTIONS (EMOTION_ID, EMOTION_NAME, DESCRIPTION) VALUES
    (SEQ_EMOTIONS_EMOTION_ID.NEXTVAL, '슬픔', '상실감, 우울함, 비애 등 부정적인 감정');
INSERT INTO TB_EMOTIONS (EMOTION_ID, EMOTION_NAME, DESCRIPTION) VALUES
    (SEQ_EMOTIONS_EMOTION_ID.NEXTVAL, '화남', '분노, 짜증, 격분 등 불쾌하고 공격적인 감정');
INSERT INTO TB_EMOTIONS (EMOTION_ID, EMOTION_NAME, DESCRIPTION) VALUES
    (SEQ_EMOTIONS_EMOTION_ID.NEXTVAL, '평온', '고요함, 안정감, 평화로움 등 차분한 감정');
INSERT INTO TB_EMOTIONS (EMOTION_ID, EMOTION_NAME, DESCRIPTION) VALUES
    (SEQ_EMOTIONS_EMOTION_ID.NEXTVAL, '불안', '걱정, 초조함, 두려움 등 불확실성에서 오는 감정');
INSERT INTO TB_EMOTIONS (EMOTION_ID, EMOTION_NAME, DESCRIPTION) VALUES
    (SEQ_EMOTIONS_EMOTION_ID.NEXTVAL, '피곤', '육체적 또는 정신적 에너지 소모로 인한 지침');
INSERT INTO TB_EMOTIONS (EMOTION_ID, EMOTION_NAME, DESCRIPTION) VALUES
    (SEQ_EMOTIONS_EMOTION_ID.NEXTVAL, '고민', '어떤 문제에 대해 깊이 생각하고 해결책을 찾으려는
감정');
INSERT INTO TB_EMOTIONS (EMOTION_ID, EMOTION_NAME, DESCRIPTION) VALUES
    (SEQ_EMOTIONS_EMOTION_ID.NEXTVAL, '자신감', '스스로의 능력이나 가치에 대한 믿음, 확신');


-- 11. TB_EMOTION_LOGS
CREATE TABLE TB_EMOTION_LOGS (
                                 EMOTION_LOG_ID NUMBER(19) PRIMARY KEY,
                                 USER_ID VARCHAR2(255) NOT NULL,
                                 EMOTION_ID NUMBER(19) NOT NULL,
                                 TEXT_CONTENT VARCHAR2(2000),
                                 CREATED_AT DATE DEFAULT SYSDATE NOT NULL,
                                 UPDATED_AT DATE,
                                 CONSTRAINT FK_EMOTION_USER FOREIGN KEY (USER_ID) REFERENCES TB_USERS(USER_ID) ON DELETE CASCADE,
                                 CONSTRAINT FK_EMOTION_EMOTION FOREIGN KEY (EMOTION_ID) REFERENCES TB_EMOTIONS(EMOTION_ID) ON DELETE CASCADE
);

COMMENT ON TABLE TB_EMOTION_LOGS IS '감정 기록';
COMMENT ON COLUMN TB_EMOTION_LOGS.EMOTION_LOG_ID IS '감정 로그 고유 식별자';
COMMENT ON COLUMN TB_EMOTION_LOGS.USER_ID IS 'TB_USERS 테이블의 사용자 ID 참조';
COMMENT ON COLUMN TB_EMOTION_LOGS.EMOTION_ID IS 'TB_EMOTIONS 테이블의 감정 ID 참조';
COMMENT ON COLUMN TB_EMOTION_LOGS.TEXT_CONTENT IS '텍스트로 기록한 감정 내용 (최대 4000자)';
COMMENT ON COLUMN TB_EMOTION_LOGS.CREATED_AT IS '기록 생성 시간';
COMMENT ON COLUMN TB_EMOTION_LOGS.UPDATED_AT IS '기록 수정 시간';

-- 1. TB_COMMON_QUESTIONS (기존 TB_TEST_QUESTIONS 이름 변경 및 코멘트 수정)
CREATE TABLE TB_COMMON_QUESTIONS (
                                     QUESTION_ID     NUMBER(19)      PRIMARY KEY,
                                     TEST_TYPE       VARCHAR2(50)    NOT NULL, -- 'PERSONALITY', 'PSYCHOLOGICAL_IMAGE', 'PSYCHOLOGICAL_SCALE' 등 상위 유형
                                     QUESTION_TEXT   VARCHAR2(255) NOT NULL,
                                     IMAGE_URL       VARCHAR2(255),
                                     WEIGHT          NUMBER(5,2)     DEFAULT 1.0,
                                     CATEGORY        VARCHAR2(50), -- 'MBTI_EI', 'STRESS', 'DEPRESSION', 'IMAGE_BASED' 등 세부 카테고리
                                     SCORE_DIRECTION VARCHAR2(10),
                                     CONSTRAINT CHK_COMMON_Q_TEST_TYPE CHECK (TEST_TYPE IN ('PERSONALITY', 'PSYCHOLOGICAL_IMAGE', 'PSYCHOLOGICAL_SCALE')), -- 유형 제약조건 추가
                                     CONSTRAINT CK_COMMON_Q_SCORE_DIR CHECK (
                                         SCORE_DIRECTION IS NULL OR
                                         SCORE_DIRECTION IN ('E', 'I', 'S', 'N', 'T', 'F', 'J', 'P')
                                         )
);
COMMENT ON TABLE TB_COMMON_QUESTIONS IS '모든 유형의 심리/성격 검사 문항';
COMMENT ON COLUMN TB_COMMON_QUESTIONS.QUESTION_ID IS '문항 고유 식별자';
COMMENT ON COLUMN TB_COMMON_QUESTIONS.TEST_TYPE IS '검사 대분류 유형 (PERSONALITY, PSYCHOLOGICAL_IMAGE, PSYCHOLOGICAL_SCALE)';
COMMENT ON COLUMN TB_COMMON_QUESTIONS.QUESTION_TEXT IS '문항 내용 (텍스트 기반 문항 또는 이미지 문항의 보조 설명)';
COMMENT ON COLUMN TB_COMMON_QUESTIONS.IMAGE_URL IS '이미지 기반 문항용: 제시될 이미지 파일의 URL';
COMMENT ON COLUMN TB_COMMON_QUESTIONS.WEIGHT IS '문항의 분석 가중치 (기본값 1.0)';
COMMENT ON COLUMN TB_COMMON_QUESTIONS.CATEGORY IS '문항의 세부 카테고리 (예: STRESS, DEPRESSION, MBTI_EI, IMAGE_BASED)';
COMMENT ON COLUMN TB_COMMON_QUESTIONS.SCORE_DIRECTION IS 'MBTI 성격 검사용: 점수 가산 방향 (E, I, S, N, T, F, J, P 중 하나. 심리검사는 NULL)';

-- MBTI 성격 검사 문항 추가 SQL (총 32문항)
-- TEST_TYPE: 'PERSONALITY', WEIGHT: 1.0 (기본값)
-- SCORE_DIRECTION: E, I, S, N, T, F, J, P

-- E (외향) / I (내향) 척도 문항 (8개)
-- 'E' 지향 문항 (긍정 답변 시 E 점수 증가)
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (1, 'PERSONALITY', '새로운 사람들과 만나는 것이 즐겁고 에너지가 넘치나요?', 1.0, 'MBTI_E_I', 'E'); -- CATEGORY 명확화
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (2, 'PERSONALITY', '활동적인 모임이나 파티에 참여하는 것을 좋아하나요?', 1.0, 'MBTI_E_I', 'E');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (3, 'PERSONALITY', '낯선 사람들에게 먼저 다가가고 쉽게 대화를 시작합니다.', 1.0, 'MBTI_E_I', 'E');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (4, 'PERSONALITY', '대화를 통해 생각을 정리하고 표현하는 것이 더 편합니다.', 1.0, 'MBTI_E_I', 'E');

-- 'I' 지향 문항 (긍정 답변 시 I 점수 증가)
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (5, 'PERSONALITY', '혼자만의 시간을 가지며 깊이 생각하는 것을 즐깁니다.', 1.0, 'MBTI_E_I', 'I');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (6, 'PERSONALITY', '조용하고 차분한 환경에서 에너지를 충전하는 편입니다.', 1.0, 'MBTI_E_I', 'I');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (7, 'PERSONALITY', '타인과 대화하기보다 글이나 다른 방법으로 표현하는 것이 편합니다.', 1.0, 'MBTI_E_I', 'I');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (8, 'PERSONALITY', '많은 사람들과 함께 있을 때 쉽게 지치거나 피로감을 느낍니다.', 1.0, 'MBTI_E_I', 'I');


-- S (감각) / N (직관) 척도 문항 (8개)
-- 'S' 지향 문항
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (9, 'PERSONALITY', '구체적이고 실용적인 사실에 근거하여 판단합니다.', 1.0, 'MBTI_S_N', 'S'); -- CATEGORY 명확화
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (10, 'PERSONALITY', '현재의 경험과 직접적인 관찰을 중요하게 생각합니다.', 1.0, 'MBTI_S_N', 'S');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (11, 'PERSONALITY', '세부사항을 놓치지 않고 꼼꼼하게 처리하는 편입니다.', 1.0, 'MBTI_S_N', 'S');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (12, 'PERSONALITY', '새로운 것을 배울 때, 실제 사례를 통해 배우는 것을 선호합니다.', 1.0, 'MBTI_S_N', 'S');

-- 'N' 지향 문항
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (13, 'PERSONALITY', '미래의 가능성이나 숨겨진 의미를 탐구하는 데 흥미를 느낍니다.', 1.0, 'MBTI_S_N', 'N');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (14, 'PERSONALITY', '직관과 영감을 통해 새로운 아이디어를 잘 떠올립니다.', 1.0, 'MBTI_S_N', 'N');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (15, 'PERSONALITY', '추상적인 개념이나 이론적인 논의를 즐기는 편입니다.', 1.0, 'MBTI_S_N', 'N');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (16, 'PERSONALITY', '일상적인 대화보다 심오하거나 상상력이 풍부한 대화를 좋아합니다.', 1.0, 'MBTI_S_N', 'N');


-- T (사고) / F (감정) 척도 문항 (8개)
-- 'T' 지향 문항
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (17, 'PERSONALITY', '결정을 내릴 때 논리와 객관적인 분석을 가장 중요하게 생각합니다.', 1.0, 'MBTI_T_F', 'T'); -- CATEGORY 명확화
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (18, 'PERSONALITY', '비판적이고 분석적인 사고를 통해 문제를 해결하는 것을 선호합니다.', 1.0, 'MBTI_T_F', 'T');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (19, 'PERSONALITY', '원칙과 공정성을 중요하게 여기며, 감정적인 요소에 휘둘리지 않습니다.', 1.0, 'MBTI_T_F', 'T');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (20, 'PERSONALITY', '타인에게 솔직하고 직설적인 피드백을 주는 편입니다.', 1.0, 'MBTI_T_F', 'T');

-- 'F' 지향 문항
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (21, 'PERSONALITY', '결정을 내릴 때 사람들의 감정과 상황적인 맥락을 깊이 고려합니다.', 1.0, 'MBTI_T_F', 'F');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (22, 'PERSONALITY', '타인의 감정을 공감하고 이해하는 것이 중요하다고 생각합니다.', 1.0, 'MBTI_T_F', 'F');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (23, 'PERSONALITY', '조화로운 관계를 유지하고 타인의 기분을 상하게 하지 않으려 노력합니다.', 1.0, 'MBTI_T_F', 'F');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (24, 'PERSONALITY', '비판보다는 칭찬과 격려를 통해 타인과 소통하는 것을 선호합니다.', 1.0, 'MBTI_T_F', 'F');


-- J (판단) / P (인식) 척도 문항 (8개)
-- 'J' 지향 문항
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (25, 'PERSONALITY', '계획을 세우고 그 계획에 따라 체계적으로 움직이는 것을 선호합니다.', 1.0, 'MBTI_J_P', 'J'); -- CATEGORY 명확화
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (26, 'PERSONALITY', '정리정돈이 잘 되어 있고 마감 기한을 철저히 지킵니다.', 1.0, 'MBTI_J_P', 'J');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (27, 'PERSONALITY', '결정을 신속하게 내리고 불확실한 상태를 불편해합니다.', 1.0, 'MBTI_J_P', 'J');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (28, 'PERSONALITY', '미리 준비하고 예측 가능한 상황을 선호합니다.', 1.0, 'MBTI_J_P', 'J');

-- 'P' 지향 문항
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (29, 'PERSONALITY', '자유롭고 유연하게 상황에 맞춰 행동하는 것을 즐깁니다.', 1.0, 'MBTI_J_P', 'P');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (30, 'PERSONALITY', '계획보다는 즉흥적인 활동이나 새로운 경험을 좋아합니다.', 1.0, 'MBTI_J_P', 'P');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (31, 'PERSONALITY', '마감 기한보다는 선택의 여지를 남겨두고 여유롭게 일하는 편입니다.', 1.0, 'MBTI_J_P', 'P');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (32, 'PERSONALITY', '새로운 정보에 열려 있으며, 계획을 언제든 변경할 수 있습니다.', 1.0, 'MBTI_J_P', 'P');

------------------------------------------------------------------------------------------------------------------------

-- 이미지-텍스트 심리 검사 문항 추가 (총 10문항)
-- TEST_TYPE: 'PSYCHOLOGICAL_IMAGE', CATEGORY: 'IMAGE_BASED', WEIGHT: 1.0, SCORE_DIRECTION: NULL
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, IMAGE_URL, WEIGHT, CATEGORY, SCORE_DIRECTION) VALUES
    (33, 'PSYCHOLOGICAL_IMAGE', '어둠 속 한 줄기 빛을 향해 달려가는 이 사람을 보며 어떤 감정이나 에너지를 느끼시나요?', 'analysis1.jpg', 1.0, 'IMAGE_BASED', NULL);
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, IMAGE_URL, WEIGHT, CATEGORY, SCORE_DIRECTION) VALUES
    (34, 'PSYCHOLOGICAL_IMAGE', '서로 다른 두 공간의 경계를 보며 어떤 단어나 느낌이 떠오르나요? 이 경계가 당신에게 어떤 의미로 다가오나요?', 'analysis2.jpg', 1.0, 'IMAGE_BASED', NULL);
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, IMAGE_URL, WEIGHT, CATEGORY, SCORE_DIRECTION) VALUES
    (35, 'PSYCHOLOGICAL_IMAGE', '수많은 책과 고요함으로 가득한 이 공간을 보며 어떤 생각이나 느낌에 잠기게 되나요?', 'analysis3.jpg', 1.0, 'IMAGE_BASED', NULL);
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, IMAGE_URL, WEIGHT, CATEGORY, SCORE_DIRECTION) VALUES
    (36, 'PSYCHOLOGICAL_IMAGE', '이 소용돌이치는 푸른 에너지를 보며, 당신의 마음속에 어떤 미지의 감정이나 미스터리가 떠오르나요?', 'analysis4.jpg', 1.0, 'IMAGE_BASED', NULL);
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, IMAGE_URL, WEIGHT, CATEGORY, SCORE_DIRECTION) VALUES
    (37, 'PSYCHOLOGICAL_IMAGE', '밤하늘 아래 빛나는 하트를 함께 바라보는 두 사람에게서 어떤 관계의 감정이나 이야기를 느끼시나요?', 'analysis5.jpg', 1.0, 'IMAGE_BASED', NULL);
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, IMAGE_URL, WEIGHT, CATEGORY, SCORE_DIRECTION) VALUES
    (38, 'PSYCHOLOGICAL_IMAGE', '어두운 숲 속을 뚫고 들어오는 빛줄기를 보며 어떤 희망이나 안도감을 느끼시나요? 이 빛은 당신에게 어떤 의미인가요?', 'analysis6.jpg', 1.0, 'IMAGE_BASED', NULL);
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, IMAGE_URL, WEIGHT, CATEGORY, SCORE_DIRECTION) VALUES
    (39, 'PSYCHOLOGICAL_IMAGE', '자연과 인공적인 구조물이 조화된 이 공간에서 어떤 감정적인 반응이나 생각을 하시나요?', 'analysis7.jpg', 1.0, 'IMAGE_BASED', NULL);
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, IMAGE_URL, WEIGHT, CATEGORY, SCORE_DIRECTION) VALUES
    (40, 'PSYCHOLOGICAL_IMAGE', '고요한 해변의 등대를 보며 어떤 감정이나 심리적 안정감을 느끼시나요? 이 등대는 당신에게 무엇을 의미하나요?', 'analysis8.jpg', 1.0, 'IMAGE_BASED', NULL);
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, IMAGE_URL, WEIGHT, CATEGORY, SCORE_DIRECTION) VALUES
    (41, 'PSYCHOLOGICAL_IMAGE', '끝없이 이어지는 듯한 나선형 구조를 보며 어떤 심리적 압박감이나 해방감을 느끼시나요?', 'analysis9.jpg', 1.0, 'IMAGE_BASED', NULL);
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, IMAGE_URL, WEIGHT, CATEGORY, SCORE_DIRECTION) VALUES
    (42, 'PSYCHOLOGICAL_IMAGE', '산속 외딴집과 길을 걷는 사람의 모습을 보며, 당신의 마음속에 어떤 자유로움이나 외로움이 떠오르나요?', 'analysis10.jpg', 1.0, 'IMAGE_BASED', NULL);

------------------------------------------------------------------------------------------------------------------------

-- 우울증 검사 문항 추가 (총 10문항)
-- TEST_TYPE: 'PSYCHOLOGICAL_SCALE', CATEGORY: 'DEPRESSION_SCALE', WEIGHT: 1.0, IMAGE_URL: NULL, SCORE_DIRECTION: NULL
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, IMAGE_URL, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (43, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 흥미나 즐거움을 느끼지 못하셨습니까?', NULL, 1.0, 'DEPRESSION_SCALE', NULL);

INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, IMAGE_URL, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (44, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 기분이 가라앉거나 우울하거나 희망이 없었습니까?', NULL, 1.0, 'DEPRESSION_SCALE', NULL);

INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, IMAGE_URL, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (45, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 잠들기가 어렵거나 잠을 너무 많이 잤습니까?', NULL, 1.0, 'DEPRESSION_SCALE', NULL);

INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, IMAGE_URL, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (46, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 피로감을 느끼거나 기운이 없었습니까?', NULL, 1.0, 'DEPRESSION_SCALE', NULL);

INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, IMAGE_URL, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (47, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 식욕이 없거나 과식했습니까?', NULL, 1.0, 'DEPRESSION_SCALE', NULL);

INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, IMAGE_URL, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (48, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 스스로를 실패자라고 느끼거나 가족을 실망시켰다고 생각했습니까?', NULL, 1.0, 'DEPRESSION_SCALE', NULL);

INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, IMAGE_URL, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (49, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 집중하기가 어렵거나 신문이나 TV를 보기 어려웠습니까?', NULL, 1.0, 'DEPRESSION_SCALE', NULL);

INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, IMAGE_URL, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (50, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 다른 사람들이 눈치 챌 정도로 말이나 행동이 느려졌거나, 반대로 너무 안절부절못했습니까?', NULL, 1.0, 'DEPRESSION_SCALE', NULL);

INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, IMAGE_URL, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (51, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 자해하거나 스스로에게 상처를 입힐 생각을 했습니까?', NULL, 1.0, 'DEPRESSION_SCALE', NULL);

INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, IMAGE_URL, WEIGHT, CATEGORY, SCORE_DIRECTION)
VALUES (52, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 어떤 일로 인해 당신의 직장, 학업, 가사 활동에 지장이 있었습니까?', NULL, 1.0, 'DEPRESSION_SCALE', NULL);

-- 우울증 검사 추가 문항 (20문항)
-- TEST_TYPE: 'PSYCHOLOGICAL_SCALE', CATEGORY: 'DEPRESSION_SCALE'
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (53, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 불안하거나 걱정에 휩싸인다고 느꼈습니까?', 1.0, 'DEPRESSION_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (54, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 모든 것이 큰 노력처럼 느껴졌습니까?', 1.0, 'DEPRESSION_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (55, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 갑자기 눈물이 나거나 울고 싶다고 느꼈습니까?', 1.0, 'DEPRESSION_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (56, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 사소한 일에도 쉽게 짜증이 나거나 화가 났습니까?', 1.0, 'DEPRESSION_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (57, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 미래에 대해 비관적이거나 절망적이라고 느꼈습니까?', 1.0, 'DEPRESSION_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (58, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 예전에는 즐거웠던 사회적 모임이나 활동을 피하고 싶었습니까?', 1.0, 'DEPRESSION_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (59, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 다른 사람들로부터 소외되거나 단절된 느낌을 받았습니까?', 1.0, 'DEPRESSION_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (60, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 간단한 결정을 내리는 것조차 어렵다고 느꼈습니까?', 1.0, 'DEPRESSION_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (61, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 스스로가 다른 사람들에게 짐이 된다고 느꼈습니까?', 1.0, 'DEPRESSION_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (62, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 일상적인 집안일이나 개인 위생을 돌보는 것이 힘들었습니까?', 1.0, 'DEPRESSION_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (63, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 감정적으로 무감각하거나 텅 빈 느낌이 들었습니까?', 1.0, 'DEPRESSION_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (64, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 설명할 수 없는 두통, 소화 불량, 통증 등을 겪었습니까?', 1.0, 'DEPRESSION_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (65, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 부정적인 생각이 머릿속을 맴돌아 떨쳐내기 어려웠습니까?', 1.0, 'DEPRESSION_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (66, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 사소한 것들을 기억하는 데 어려움을 겪었습니까?', 1.0, 'DEPRESSION_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (67, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 스스로에 대한 자신감을 잃었습니까?', 1.0, 'DEPRESSION_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (68, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 다시는 좋은 일이 일어나지 않을 것이라고 느꼈습니까?', 1.0, 'DEPRESSION_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (69, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 새로운 과제나 일을 시작하는 것이 버겁게 느껴졌습니까?', 1.0, 'DEPRESSION_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (70, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 안절부절못하고 가만히 앉아 있기 힘들었습니까?', 1.0, 'DEPRESSION_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (71, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 스스로가 벌을 받아야 마땅하다고 생각했습니까?', 1.0, 'DEPRESSION_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (72, 'PSYCHOLOGICAL_SCALE', '지난 2주 동안, 삶이 살아갈 가치가 없다고 느꼈습니까?', 1.0, 'DEPRESSION_SCALE');


------------------------------------------------------------------------------------------------------------------------

-- 스트레스 검사 문항 (기존 10문항, ID 73~82)
-- TEST_TYPE: 'PSYCHOLOGICAL_SCALE', CATEGORY: 'STRESS_SCALE'
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (73, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 예상치 못한 일 때문에 안절부절못한 적이 있었습니까?', 1.0, 'STRESS_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (74, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 중요한 일들을 통제할 수 없다고 느낀 적이 있었습니까?', 1.0, 'STRESS_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (75, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 신경이 예민해지고 스트레스를 받아서 짜증이 났던 적이 있었습니까?', 1.0, 'STRESS_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (76, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 자신의 개인적인 문제들을 성공적으로 다룰 수 있다고 느낀 적이 있었습니까?', 1.0, 'STRESS_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (77, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 당신이 해야 할 모든 일들을 성공적으로 처리할 수 있다고 확신한 적이 있었습니까?', 1.0, 'STRESS_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (78, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 짜증나는 일들을 통제할 수 없다고 느낀 적이 있었습니까?', 1.0, 'STRESS_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (79, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 당신의 방식대로 일들이 진행되지 않아 화가 난 적이 있었습니까?', 1.0, 'STRESS_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (80, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 해야 할 일들이 너무 많아 감당하기 어렵다고 느낀 적이 있었습니까?', 1.0, 'STRESS_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (81, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 어려움이 닥쳐올 때 그것을 통제할 수 있다고 느낀 적이 있었습니까?', 1.0, 'STRESS_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (82, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 사소한 일들에 대해 계속해서 걱정한 적이 있었습니까?', 1.0, 'STRESS_SCALE');
-- 스트레스 검사 문항 (신규 20문항, ID 83~102)
-- TEST_TYPE: 'PSYCHOLOGICAL_SCALE', CATEGORY: 'STRESS_SCALE'
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (83, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 어려운 문제들이 너무 많이 쌓여서 도저히 극복할 수 없다고 느낀 적이 있었습니까?', 1.0, 'STRESS_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (84, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 마음을 편안하게 쉬거나 긴장을 풀기 어려웠습니까?', 1.0, 'STRESS_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (85, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 모든 일이 순조롭게 진행되고 있다고 느낀 적이 있었습니까?', 1.0, 'STRESS_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (86, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 사소한 일에도 쉽게 흥분하거나 당황한 적이 있었습니까?', 1.0, 'STRESS_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (87, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 중요한 변화에 효과적으로 대처하고 있다고 느낀 적이 있었습니까?', 1.0, 'STRESS_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (88, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 집중해야 할 때 머릿속이 하얘지는 경험을 한 적이 있었습니까?', 1.0, 'STRESS_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (89, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 안절부절못하고 가만히 있기 힘들다고 느낀 적이 있었습니까?', 1.0, 'STRESS_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (90, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 친구나 가족에게 평소보다 더 쉽게 화를 낸 적이 있었습니까?', 1.0, 'STRESS_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (91, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 뚜렷한 이유 없이 불안하거나 두려운 느낌이 든 적이 있었습니까?', 1.0, 'STRESS_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (92, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 스스로 통제할 수 없는 일들에 대해 계속 생각하고 있는 자신을 발견한 적이 있었습니까?', 1.0, 'STRESS_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (93, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 일상적인 업무들을 잘 처리했다고 느낀 적이 있었습니까?', 1.0, 'STRESS_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (94, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 원인 모를 두통이나 소화 불량을 겪은 적이 있었습니까?', 1.0, 'STRESS_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (95, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 머릿속이 너무 복잡해서 잠들기 어려웠던 적이 있었습니까?', 1.0, 'STRESS_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (96, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 감정적으로 완전히 지쳤다고 느낀 적이 있었습니까?', 1.0, 'STRESS_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (97, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 하루 일과를 마친 후에도 긴장을 풀기 어렵다고 느낀 적이 있었습니까?', 1.0, 'STRESS_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (98, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 전반적으로 마음이 불편하고 불안정한 느낌이 든 적이 있었습니까?', 1.0, 'STRESS_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (99, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 당신의 일상 생활이 흥미로운 일들로 가득 차 있다고 느낀 적이 있었습니까?', 1.0, 'STRESS_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (100, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 해야 할 일의 목록을 보고 압도당하는 느낌을 받은 적이 있었습니까?', 1.0, 'STRESS_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (101, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 쉽게 마음이 상하거나 감정적으로 변한 적이 있었습니까?', 1.0, 'STRESS_SCALE');
INSERT INTO TB_COMMON_QUESTIONS (QUESTION_ID, TEST_TYPE, QUESTION_TEXT, WEIGHT, CATEGORY) VALUES (102, 'PSYCHOLOGICAL_SCALE', '지난 한 달 동안, 앞으로 겪게 될 변화들에 대해 걱정한 적이 있었습니까?', 1.0, 'STRESS_SCALE');

-- 모든 변경사항을 데이터베이스에 최종 반영
COMMIT;



-- 13. TB_PERSONALITY_TEST_ANSWERS
CREATE TABLE TB_PERSONALITY_ANSWERS (
                                        ANSWER_ID       NUMBER(19) PRIMARY KEY,
                                        USER_ID         VARCHAR2(255) NOT NULL,
                                        QUESTION_ID     NUMBER(19) NOT NULL,
                                        ANSWER_VALUE    VARCHAR2(50) NOT NULL,
                                        CONSTRAINT FK_PERSONALITY_ANS_USER FOREIGN KEY (USER_ID) REFERENCES TB_USERS(USER_ID) ON DELETE CASCADE,
                                        CONSTRAINT FK_PERSONALITY_ANS_QUESTION FOREIGN KEY (QUESTION_ID) REFERENCES TB_COMMON_QUESTIONS(QUESTION_ID) ON DELETE CASCADE -- 참조 테이블 변경
);
COMMENT ON TABLE TB_PERSONALITY_ANSWERS IS 'MBTI 등 성격 검사의 사용자 문항별 답변';
COMMENT ON COLUMN TB_PERSONALITY_ANSWERS.ANSWER_ID IS '답변 고유 식별자';
COMMENT ON COLUMN TB_PERSONALITY_ANSWERS.USER_ID IS '사용자 ID';
COMMENT ON COLUMN TB_PERSONALITY_ANSWERS.QUESTION_ID IS 'TB_COMMON_QUESTIONS 테이블의 문항 ID 참조';
COMMENT ON COLUMN TB_PERSONALITY_ANSWERS.ANSWER_VALUE IS '문항 답변 값 (예: 1~5점, YES/NO)';


-- 14. 성격 분석 결과 테이블 (수정)
CREATE TABLE TB_PERSONALITY_RESULTS (
                                        PERSONALITY_ID  NUMBER(19) PRIMARY KEY,
                                        PERSONALITY_TEST_ID NUMBER(19) NOT NULL, -- 어떤 특정 성격 테스트 (예: 1=MBTI)
                                        USER_ID         VARCHAR2(255) NOT NULL,
                                        RESULT          VARCHAR2(50) NOT NULL, -- MBTI 유형 (예: INFP)
                                        DESCRIPTION     VARCHAR2(2000),
                                        MBTI_TITLE      VARCHAR2(100 CHAR),
                                        CREATED_AT      DATE DEFAULT SYSDATE NOT NULL,
                                        CONSTRAINT FK_PERSONALITY_RES_USER FOREIGN KEY (USER_ID) REFERENCES TB_USERS(USER_ID) ON DELETE CASCADE
);
COMMENT ON TABLE TB_PERSONALITY_RESULTS IS 'MBTI 등 성격 검사의 최종 분석 결과';
COMMENT ON COLUMN TB_PERSONALITY_RESULTS.PERSONALITY_ID IS '성격 분석 결과 고유 식별자';
COMMENT ON COLUMN TB_PERSONALITY_RESULTS.PERSONALITY_TEST_ID IS '어떤 종류의 성격 테스트인지 식별 (예: 1=MBTI)';
COMMENT ON COLUMN TB_PERSONALITY_RESULTS.USER_ID IS '검사를 수행한 사용자의 ID';
COMMENT ON COLUMN TB_PERSONALITY_RESULTS.RESULT IS '최종 분석 결과 (예: MBTI 유형 코드 INFP)';
COMMENT ON COLUMN TB_PERSONALITY_RESULTS.DESCRIPTION IS '결과에 대한 상세 설명';
COMMENT ON COLUMN TB_PERSONALITY_RESULTS.MBTI_TITLE IS 'MBTI 유형별 칭호';
COMMENT ON COLUMN TB_PERSONALITY_RESULTS.CREATED_AT IS '결과 생성 시간';

-- 15 수정
CREATE TABLE TB_PSYCHOLOGICAL_IMAGE_ANSWERS (
                                                ANSWER_ID           NUMBER(19) PRIMARY KEY,
                                                USER_ID             VARCHAR2(255) NOT NULL,
                                                QUESTION_ID         NUMBER(19) NOT NULL,
                                                TEST_TYPE           VARCHAR2(100) NOT NULL, -- ✨ 여기에 추가했습니다.
                                                USER_RESPONSE_TEXT  CLOB NOT NULL,
                                                ANSWER_DATETIME     TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
                                                CONSTRAINT FK_PSY_IMG_ANS_USER FOREIGN KEY (USER_ID) REFERENCES TB_USERS(USER_ID) ON DELETE CASCADE,
                                                CONSTRAINT FK_PSY_IMG_ANS_QUESTION FOREIGN KEY (QUESTION_ID) REFERENCES TB_COMMON_QUESTIONS(QUESTION_ID) ON DELETE CASCADE
);

COMMENT ON TABLE TB_PSYCHOLOGICAL_IMAGE_ANSWERS IS '이미지-텍스트 심리 검사의 사용자 답변 (느낀 점 텍스트)';

COMMENT ON COLUMN TB_PSYCHOLOGICAL_IMAGE_ANSWERS.ANSWER_ID IS '답변 고유 식별자';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_IMAGE_ANSWERS.USER_ID IS '사용자 ID (TB_USERS 참조)';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_IMAGE_ANSWERS.QUESTION_ID IS 'TB_COMMON_QUESTIONS 테이블의 이미지 문항 ID 참조';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_IMAGE_ANSWERS.TEST_TYPE IS '검사의 종류를 식별하는 값'; -- ✨ 컬럼 설명도 추가했습니다.
COMMENT ON COLUMN TB_PSYCHOLOGICAL_IMAGE_ANSWERS.USER_RESPONSE_TEXT IS '사용자가 이미지에 대해 작성한 느낀 점 텍스트';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_IMAGE_ANSWERS.ANSWER_DATETIME IS '답변이 저장된 시각';

-- 16 수정
CREATE TABLE TB_PSYCHOLOGICAL_IMAGE_RESULTS (
                                                RESULT_ID               NUMBER(19) PRIMARY KEY,
                                                USER_ID                 VARCHAR2(255) NOT NULL,
                                                QUESTION_ID             NUMBER(19) NOT NULL, -- 어떤 이미지에 대한 분석인지
                                                RAW_RESPONSE_TEXT       CLOB NOT NULL, -- 사용자가 작성한 원본 느낀 점 텍스트 (분석 기록용)
                                                AI_SENTIMENT            VARCHAR2(50),
                                                AI_SENTIMENT_SCORE      NUMBER(5,2),
                                                AI_CREATIVITY_SCORE     NUMBER(5,2),
                                                AI_PERSPECTIVE_KEYWORDS VARCHAR2(500),
                                                AI_INSIGHT_SUMMARY      CLOB,
                                                SUGGESTIONS             VARCHAR2(2000),
                                                CREATED_AT              TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
                                                CONSTRAINT FK_PSY_IMG_RES_USER FOREIGN KEY (USER_ID) REFERENCES TB_USERS(USER_ID) ON DELETE CASCADE,
                                                CONSTRAINT FK_PSY_IMG_RES_QUESTION FOREIGN KEY (QUESTION_ID) REFERENCES TB_COMMON_QUESTIONS(QUESTION_ID) ON DELETE CASCADE -- 참조 테이블 변경
);
COMMENT ON TABLE TB_PSYCHOLOGICAL_IMAGE_RESULTS IS '이미지-텍스트 심리 검사의 AI 분석 결과';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_IMAGE_RESULTS.RESULT_ID IS '분석 결과 고유 식별자';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_IMAGE_RESULTS.USER_ID IS '분석을 받은 사용자 ID';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_IMAGE_RESULTS.QUESTION_ID IS '분석 대상 이미지 문항 ID';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_IMAGE_RESULTS.RAW_RESPONSE_TEXT IS '사용자가 이미지에 대해 작성한 원본 텍스트';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_IMAGE_RESULTS.AI_SENTIMENT IS 'AI 분석 주 감정 (행복, 우울 등)';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_IMAGE_RESULTS.AI_SENTIMENT_SCORE IS 'AI 분석 감정 점수';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_IMAGE_RESULTS.AI_CREATIVITY_SCORE IS 'AI 분석 창의력/상상력 지표 점수';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_IMAGE_RESULTS.AI_PERSPECTIVE_KEYWORDS IS 'AI 분석 관점 키워드 (쉼표 구분)';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_IMAGE_RESULTS.AI_INSIGHT_SUMMARY IS 'AI가 제공하는 심층 분석 요약 및 통찰';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_IMAGE_RESULTS.SUGGESTIONS IS '개선 제안 / 맞춤형 조언';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_IMAGE_RESULTS.CREATED_AT IS '분석 생성 시간';


-- 6. TB_PSYCHOLOGICAL_SCALE_ANSWERS (새로 추가: 우울증, 스트레스 등 척도 검사 답변)
CREATE TABLE TB_PSYCHOLOGICAL_SCALE_ANSWERS (
                                                ANSWER_ID       NUMBER(19) GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
                                                USER_ID         VARCHAR2(255) NOT NULL,
                                                QUESTION_ID     NUMBER(19,0) NOT NULL,
                                                ANSWER_VALUE    NUMBER(5,0) NOT NULL,
                                                TEST_CATEGORY   VARCHAR2(50 BYTE) NOT NULL, -- 'DEPRESSION_SCALE', 'STRESS_SCALE' 등 세부 카테고리
                                                ANSWER_DATETIME TIMESTAMP(6) DEFAULT SYSTIMESTAMP NOT NULL,
                                                CONSTRAINT FK_PSY_SCALE_ANS_USER FOREIGN KEY (USER_ID) REFERENCES TB_USERS(USER_ID) ON DELETE CASCADE,
                                                CONSTRAINT FK_PSY_SCALE_ANS_QUESTION FOREIGN KEY (QUESTION_ID) REFERENCES TB_COMMON_QUESTIONS(QUESTION_ID) ON DELETE CASCADE -- 참조 테이블 변경
);
COMMENT ON TABLE TB_PSYCHOLOGICAL_SCALE_ANSWERS IS '우울증, 스트레스 등 척도 기반 심리 검사의 사용자 문항별 답변';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_SCALE_ANSWERS.ANSWER_ID IS '답변 고유 식별자';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_SCALE_ANSWERS.USER_ID IS '답변을 제출한 사용자 ID';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_SCALE_ANSWERS.QUESTION_ID IS 'TB_COMMON_QUESTIONS 테이블의 문항 ID 참조';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_SCALE_ANSWERS.ANSWER_VALUE IS '사용자가 선택한 답변 점수 (예: 1~5점)';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_SCALE_ANSWERS.TEST_CATEGORY IS '이 답변이 속한 심리 검사 카테고리 (예: DEPRESSION_SCALE, STRESS_SCALE)';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_SCALE_ANSWERS.ANSWER_DATETIME IS '답변이 데이터베이스에 저장된 시각';

------------------------------------------------------------------------------------------------------------------------

-- 7. TB_PSYCHOLOGICAL_SCALE_RESULTS (새로 추가: 우울증, 스트레스 등 척도 검사 결과)
CREATE TABLE TB_PSYCHOLOGICAL_SCALE_RESULTS (
                                                RESULT_ID       NUMBER(19) GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
                                                USER_ID         VARCHAR2(255) NOT NULL,
                                                TEST_CATEGORY   VARCHAR2(50) NOT NULL, -- 'DEPRESSION_SCALE', 'STRESS_SCALE' 등 세부 카테고리
                                                TOTAL_SCORE     NUMBER(10,2) NOT NULL,
                                                INTERPRETATION  CLOB, -- 총점에 따른 심리적 해석 또는 진단 요약
                                                RISK_LEVEL      VARCHAR2(50 BYTE), -- 해당 검사 결과에 따른 위험도 수준 (예: NORMAL, CAUTION, HIGH_RISK)
                                                SUGGESTIONS     CLOB, -- 사용자에게 줄 제안
                                                CREATED_AT      TIMESTAMP(6) DEFAULT SYSTIMESTAMP NOT NULL,
                                                CONSTRAINT FK_PSY_SCALE_RES_USER FOREIGN KEY (USER_ID) REFERENCES TB_USERS(USER_ID) ON DELETE CASCADE
);
COMMENT ON TABLE TB_PSYCHOLOGICAL_SCALE_RESULTS IS '우울증, 스트레스 등 척도 기반 심리 검사의 최종 분석 결과';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_SCALE_RESULTS.RESULT_ID IS '척도 검사 결과 고유 식별자';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_SCALE_RESULTS.USER_ID IS '분석 결과를 받은 사용자 ID';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_SCALE_RESULTS.TEST_CATEGORY IS '이 결과가 속한 심리 검사 카테고리 (예: DEPRESSION_SCALE, STRESS_SCALE)';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_SCALE_RESULTS.TOTAL_SCORE IS '척도 검사 문항들의 총점';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_SCALE_RESULTS.INTERPRETATION IS '총점에 따른 심리적 해석 또는 진단 요약';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_SCALE_RESULTS.RISK_LEVEL IS '해당 검사 결과에 따른 위험도 수준 (예: NORMAL, CAUTION, HIGH_RISK)';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_SCALE_RESULTS.SUGGESTIONS IS '분석 결과를 바탕으로 사용자에게 제공하는 맞춤형 제안';
COMMENT ON COLUMN TB_PSYCHOLOGICAL_SCALE_RESULTS.CREATED_AT IS '분석 결과가 데이터베이스에 생성된 시각';


-- 18. TB_SIMULATION_SETTINGS
CREATE TABLE TB_SIMULATION_SETTINGS (
                                        SETTING_ID NUMBER(19) PRIMARY KEY,
                                        USER_ID VARCHAR2(255) NOT NULL,
                                        SESSION_ID NUMBER(19),
                                        STATUS VARCHAR2(20) DEFAULT 'IN_PROGRESS' NOT NULL CHECK (STATUS IN ('IN_PROGRESS', 'COMPLETED', 'CANCELLED')),
                                        CREATED_AT DATE DEFAULT SYSDATE NOT NULL,
                                        CONSTRAINT FK_SIMULATION_USER FOREIGN KEY (USER_ID) REFERENCES TB_USERS(USER_ID) ON DELETE CASCADE,
                                        CONSTRAINT FK_SIMULATION_SESSION FOREIGN KEY (SESSION_ID) REFERENCES TB_COUNSELING_SESSIONS(SESSION_ID) ON DELETE SET NULL
);

COMMENT ON TABLE TB_SIMULATION_SETTINGS IS '시뮬레이션 환경';
COMMENT ON COLUMN TB_SIMULATION_SETTINGS.SETTING_ID IS '시뮬레이션 설정의 고유 식별자';
COMMENT ON COLUMN TB_SIMULATION_SETTINGS.USER_ID IS 'TB_USERS 테이블의 사용자 ID 참조, 시뮬레이션 수행 사용자';
COMMENT ON COLUMN TB_SIMULATION_SETTINGS.SESSION_ID IS 'TB_COUNSELING_SESSIONS 테이블의 세션 ID 참조';
COMMENT ON COLUMN TB_SIMULATION_SETTINGS.STATUS IS '시뮬레이션 진행 상태 (IN_PROGRESS, COMPLETED, CANCELLED)';
COMMENT ON COLUMN TB_SIMULATION_SETTINGS.CREATED_AT IS '설정 생성 시간';



-- 20. TB_SIMULATION_CHOICES
-- TB_SIMULATION_CHOICES 테이블 생성
CREATE TABLE TB_SIMULATION_CHOICES (
                                       CHOICE_ID       NUMBER(19)      PRIMARY KEY,                           -- 선택지의 고유 식별자
                                       SETTING_ID      NUMBER(19)      NOT NULL,                              -- TB_SIMULATION_SETTINGS 테이블의 설정 ID 참조
                                       QUESTION_NUMBER NUMBER(5)       NOT NULL,                              -- 질문 번호
                                       CHOICE_TEXT     VARCHAR2(255)   NOT NULL,                              -- 선택한 텍스트 (예: "이직을 결정한다")
                                       SELECTED_TRAIT  VARCHAR2(200),                                          -- AI 분석을 위해 사용자가 선택한 성향 특성 (NULL 허용)

    -- 외래 키 제약 조건 (SETTING_ID가 TB_SIMULATION_SETTINGS의 SETTING_ID를 참조)
    -- TB_SIMULATION_SETTINGS 테이블이 먼저 존재해야 합니다.
                                       CONSTRAINT FK_SIM_CHOICES_SETTINGS FOREIGN KEY (SETTING_ID)
                                           REFERENCES TB_SIMULATION_SETTINGS (SETTING_ID) ON DELETE CASCADE
);

-- 컬럼 코멘트 추가
COMMENT ON TABLE TB_SIMULATION_CHOICES IS '시뮬레이션 사용자 선택 기록';
COMMENT ON COLUMN TB_SIMULATION_CHOICES.CHOICE_ID IS '선택지의 고유 식별자';
COMMENT ON COLUMN TB_SIMULATION_CHOICES.SETTING_ID IS 'TB_SIMULATION_SETTINGS 테이블의 설정 ID 참조';
COMMENT ON COLUMN TB_SIMULATION_CHOICES.QUESTION_NUMBER IS '질문 번호';
COMMENT ON COLUMN TB_SIMULATION_CHOICES.CHOICE_TEXT IS '선택한 텍스트';
COMMENT ON COLUMN TB_SIMULATION_CHOICES.SELECTED_TRAIT IS '사용자가 선택한 성향 특성';


-- 사용자 결과 저장을 위한 테이블 생성 (수정본)
CREATE TABLE TB_SIMULATION_USER_RESULTS (
                                            user_result_id NUMBER(19,0) NOT NULL PRIMARY KEY,
                                            setting_id NUMBER(19,0) NOT NULL UNIQUE,
    -- personality_type VARCHAR2(50) NOT NULL, -- ✅ 성향 타입 컬럼은 제거
                                            result_title VARCHAR2(255) NOT NULL,
                                            result_summary VARCHAR2(2000),

    -- ✨ 새로 추가된 컬럼들 ✨
                                            initial_stress_score NUMBER(5,0),        -- 시뮬레이션 시작 전 스트레스 점수
                                            initial_depression_score NUMBER(5,0),   -- 시뮬레이션 시작 전 우울감 점수
                                            estimated_final_stress_score NUMBER(5,0), -- 시뮬레이션 후 AI 추정 스트레스 점수
                                            estimated_final_depression_score NUMBER(5,0), -- 시뮬레이션 후 AI 추정 우울감 점수
                                            positive_contribution_factors VARCHAR2(2000), -- AI가 분석한 긍정적 기여 요인 (요약 텍스트)

                                            created_at TIMESTAMP DEFAULT SYSDATE NOT NULL
);

-- 테이블 및 각 컬럼에 대한 설명(코멘트) 추가 (수정본)
COMMENT ON TABLE TB_SIMULATION_USER_RESULTS IS '사용자별 시뮬레이션 최종 결과 저장 테이블';
COMMENT ON COLUMN TB_SIMULATION_USER_RESULTS.user_result_id IS '사용자 결과 ID (PK)';
COMMENT ON COLUMN TB_SIMULATION_USER_RESULTS.setting_id IS '시뮬레이션 진행 ID (FK, TB_SIMULATION_SETTINGS)';
COMMENT ON COLUMN TB_SIMULATION_USER_RESULTS.result_title IS '결과 제목';
COMMENT ON COLUMN TB_SIMULATION_USER_RESULTS.result_summary IS '결과 요약 내용';
-- ✨ 새로 추가된 컬럼에 대한 코멘트 ✨
COMMENT ON COLUMN TB_SIMULATION_USER_RESULTS.initial_stress_score IS '시뮬레이션 시작 전 사용자 스트레스 검사 점수';
COMMENT ON COLUMN TB_SIMULATION_USER_RESULTS.initial_depression_score IS '시뮬레이션 시작 전 사용자 우울감 검사 점수';
COMMENT ON COLUMN TB_SIMULATION_USER_RESULTS.estimated_final_stress_score IS '시뮬레이션 후 AI가 추정한 최종 스트레스 점수';
COMMENT ON COLUMN TB_SIMULATION_USER_RESULTS.estimated_final_depression_score IS '시뮬레이션 후 AI가 추정한 최종 우울감 점수';
COMMENT ON COLUMN TB_SIMULATION_USER_RESULTS.positive_contribution_factors IS '시뮬레이션 과정에서 AI가 분석한 사용자의 긍정적 기여 요인';
COMMENT ON COLUMN TB_SIMULATION_USER_RESULTS.created_at IS '결과 저장 시간';

--(250716 신선혜 :  IMP_END_DATE NULLABLE 허용으로 변경 )
-- 22. TB_NOTICES
CREATE TABLE TB_NOTICES (
                            NOTICE_NO NUMBER(19) PRIMARY KEY,
                            TITLE VARCHAR2(100) NOT NULL,
                            USER_ID VARCHAR2(255) NOT NULL,
                            CONTENT VARCHAR2(2000) NOT NULL,
                            READCOUNT NUMBER(19) DEFAULT 0,
                            ORIGINAL_FILEPATH VARCHAR2(2000),
                            RENAME_FILEPATH VARCHAR2(2000),
                            IMPORTANCE CHAR(1) DEFAULT 'N' NOT NULL,
                            IMP_END_DATE DATE,
                            NOTICE_DATE DATE DEFAULT SYSDATE NOT NULL,
                            CONSTRAINT FK_NOTICE_USER_ID FOREIGN KEY (USER_ID) REFERENCES TB_USERS (USER_ID) ON DELETE CASCADE
);

COMMENT ON TABLE TB_NOTICES IS '공지사항 관리';
COMMENT ON COLUMN TB_NOTICES.NOTICE_NO IS '공지사항 고유 식별자';
COMMENT ON COLUMN TB_NOTICES.TITLE IS '공지 제목';
COMMENT ON COLUMN TB_NOTICES.USER_ID IS '작성자';
COMMENT ON COLUMN TB_NOTICES.CONTENT IS '공지 내용';
COMMENT ON COLUMN TB_NOTICES.READCOUNT IS '조회수';
COMMENT ON COLUMN TB_NOTICES.ORIGINAL_FILEPATH IS '원본첨부파일';
COMMENT ON COLUMN TB_NOTICES.RENAME_FILEPATH IS '바뀐첨부파일';
COMMENT ON COLUMN TB_NOTICES.IMPORTANCE IS '중요도';
COMMENT ON COLUMN TB_NOTICES.IMP_END_DATE IS '중요도게시종료날짜';
COMMENT ON COLUMN TB_NOTICES.NOTICE_DATE IS '작성 시간';



--(250714 신선혜 : CATEGORY,LAST_ACTIVITY_AT COLUMN 추가, ORIGINAL_FILEPATH,  RENAME_FILEPATH 삭제  )
-- 23. TB_INQUIRIES
CREATE TABLE TB_INQUIRIES (
                              INQUIRY_ID NUMBER(19) PRIMARY KEY,
                              USER_ID VARCHAR2(255) NOT NULL,
                              TITLE VARCHAR2(100) NOT NULL,
                              CATEGORY VARCHAR2(100) NOT NULL,
                              CONTENT VARCHAR2(2000) NOT NULL,
    --ORIGINAL_FILEPATH VARCHAR2(2000),
    --RENAME_FILEPATH VARCHAR2(2000),
                              STATUS VARCHAR2(20) DEFAULT 'PENDING' NOT NULL,
                              CREATED_AT DATE DEFAULT SYSDATE NOT NULL,
                              LAST_ACTIVITY_AT DATE DEFAULT SYSDATE,

                              CONSTRAINT FK_INQUIRY_USER FOREIGN KEY (USER_ID) REFERENCES TB_USERS(USER_ID) ON DELETE CASCADE,
                              CONSTRAINT CHK_INQUIRY_STATUS CHECK (STATUS IN ('PENDING', 'ANSWERED', 'CLOSED'))
);

COMMENT ON TABLE TB_INQUIRIES IS '사용자 문의사항 관리';
COMMENT ON COLUMN TB_INQUIRIES.INQUIRY_ID IS '문의 고유 식별자';
COMMENT ON COLUMN TB_INQUIRIES.USER_ID IS 'TB_USERS 테이블의 사용자 ID 참조';
COMMENT ON COLUMN TB_INQUIRIES.TITLE IS '문의 제목';
COMMENT ON COLUMN TB_INQUIRIES.CATEGORY IS '문의 카테고리';
COMMENT ON COLUMN TB_INQUIRIES.CONTENT IS '문의 내용';
--COMMENT ON COLUMN TB_INQUIRIES.ORIGINAL_FILEPATH IS '원본첨부파일';
--COMMENT ON COLUMN TB_INQUIRIES.RENAME_FILEPATH IS '바뀐첨부파일';
COMMENT ON COLUMN TB_INQUIRIES.STATUS IS '문의 상태 (PENDING: 답변대기, ANSWERED: 답변완료, CLOSED: 종료)';
COMMENT ON COLUMN TB_INQUIRIES.CREATED_AT IS '문의 생성 시간';
COMMENT ON COLUMN TB_INQUIRIES.LAST_ACTIVITY_AT IS '추가문의 생성 시간';



--(250711 신선혜 : TITLE, READ_COUNT COLUMN 삭제)
--(250715 신선혜 : PARENT_COMMENT_ID, COMMENT_LEVEL, COMMENT_SEQ 삭제)
-- 24. TB_COMMENTS
CREATE TABLE TB_COMMENTS (
                             COMMENT_ID NUMBER(19) PRIMARY KEY,  -- 댓글 고유 식별자
                             INQUIRY_ID NUMBER(19),              -- 문의사항 참조 (원글)
                             USER_ID VARCHAR2(255),               -- 작성자
                             CONTENT VARCHAR2(2000) NOT NULL,    -- 내용
                             CREATED_AT DATE DEFAULT SYSDATE,    -- 작성 시간
                             CONSTRAINT FK_COMMENT_USER_ID FOREIGN KEY (USER_ID) REFERENCES TB_USERS (USER_ID) ON DELETE CASCADE,
                             CONSTRAINT FK_COMMENT_INQUIRY FOREIGN KEY (INQUIRY_ID) REFERENCES TB_INQUIRIES (INQUIRY_ID) ON DELETE CASCADE

);


COMMENT ON TABLE TB_COMMENTS IS '문의사항 댓글 및 대댓글 관리';
COMMENT ON COLUMN TB_COMMENTS.COMMENT_ID IS '댓글 고유 식별자';
COMMENT ON COLUMN TB_COMMENTS.INQUIRY_ID IS '문의사항 참조 ID';
COMMENT ON COLUMN TB_COMMENTS.USER_ID IS '댓글 작성자 ID';
COMMENT ON COLUMN TB_COMMENTS.CONTENT IS '댓글 내용';
COMMENT ON COLUMN TB_COMMENTS.CREATED_AT IS '댓글 생성 시간';



-- 25. TB_SYSTEM_LOGS
CREATE TABLE TB_SYSTEM_LOGS (
                                LOG_ID NUMBER(19) PRIMARY KEY,
                                USER_ID VARCHAR2(255),
                                ACTION VARCHAR2(100) NOT NULL,
                                SEVERITY VARCHAR2(50) NOT NULL,
                                BEFORE_DATA VARCHAR2(2000),
                                AFTER_DATA VARCHAR2(2000),
                                CREATED_AT DATE DEFAULT SYSDATE NOT NULL,

                                CONSTRAINT FK_SYSTEMLOG_USER FOREIGN KEY (USER_ID) REFERENCES TB_USERS(USER_ID) ON DELETE CASCADE,
                                CONSTRAINT CHK_SYSTEMLOG_SEVERITY CHECK (SEVERITY IN ('INFO', 'WARN', 'ERROR', 'CRITICAL'))
);

COMMENT ON TABLE TB_SYSTEM_LOGS IS '시스템 변경 로그';
COMMENT ON COLUMN TB_SYSTEM_LOGS.LOG_ID IS '로그 고유 식별자';
COMMENT ON COLUMN TB_SYSTEM_LOGS.USER_ID IS 'TB_USERS 테이블의 사용자 ID 참조';
COMMENT ON COLUMN TB_SYSTEM_LOGS.ACTION IS '변경 항목 (예: 사용자 정보 수정)';
COMMENT ON COLUMN TB_SYSTEM_LOGS.SEVERITY IS '로그의 심각도 (예: INFO, WARN, ERROR, CRITICAL)';
COMMENT ON COLUMN TB_SYSTEM_LOGS.BEFORE_DATA IS '변경 전 데이터';
COMMENT ON COLUMN TB_SYSTEM_LOGS.AFTER_DATA IS '변경 후 데이터';
COMMENT ON COLUMN TB_SYSTEM_LOGS.CREATED_AT IS '로그 생성 시간';


-- 26. TB_USER_ANALYSIS_SUMMARY (수정)
CREATE TABLE TB_USER_ANALYSIS_SUMMARY (
    -- USER_SUMMARY_ID: 종합 분석 요약의 고유 식별자. 각 분석 요약을 고유하게 구분합니다.
                                          USER_SUMMARY_ID NUMBER(19) CONSTRAINT PK_USER_SUMMARY_ID PRIMARY KEY,

    -- USER_ID: 이 종합 분석 요약의 대상이 되는 사용자 ID. TB_USERS 테이블의 USER_ID를 참조합니다.
                                          USER_ID VARCHAR2(255),

    -- LAST_UPDATED: 이 종합 분석 요약이 최종적으로 업데이트된 시각. 기본값은 현재 시간입니다.
                                          LAST_UPDATED DATE DEFAULT SYSDATE,

    -- PSYCHO_IMAGE_RESULT_ID: 이미지-텍스트 심리 검사 결과 (TB_PSYCHOLOGICAL_IMAGE_RESULTS 테이블)의 고유 식별자를 참조합니다.
                                          PSYCHO_IMAGE_RESULT_ID NUMBER(19), -- FK to TB_PSYCHOLOGICAL_IMAGE_RESULTS.RESULT_ID

    -- PERSONALITY_RESULT_ID: 성격 검사 결과 (TB_PERSONALITY_RESULTS 테이블)의 고유 식별자를 참조합니다.
                                          PERSONALITY_RESULT_ID NUMBER(19), -- FK to TB_PERSONALITY_RESULTS.PERSONALITY_ID

    -- ⭐ 새로 추가: PSYCHO_SCALE_RESULT_ID: 척도 기반 심리 검사 결과 (TB_PSYCHOLOGICAL_SCALE_RESULTS 테이블)의 고유 식별자를 참조합니다.
                                          PSYCHO_SCALE_RESULT_ID NUMBER(19), -- FK to TB_PSYCHOLOGICAL_SCALE_RESULTS.RESULT_ID

    -- EMOTION_LOG_ID: 감정 로그 (TB_EMOTION_LOGS 테이블)의 고유 식별자를 참조합니다. (만약 이 테이블을 사용한다면)
                                          EMOTION_LOG_ID NUMBER(19),

    -- SUMMARY_ID: 상담 분석 요약 (TB_COUNSELING_ANALYSIS_SUMMARIES 테이블)의 고유 식별자를 참조합니다. (만약 이 테이블을 사용한다면)
                                          SUMMARY_ID NUMBER(19),

    -- SIMULATION_RESULT_ID: 시뮬레이션 결과 (TB_SIMULATION_RESULTS 테이블)의 고유 식별자를 참조합니다. (컬럼명 명확화)
                                          SIMULATION_RESULT_ID NUMBER(19), -- 기존 RESULT_ID에서 변경됨

    -- ANALYSIS_COMMENT: AI가 제공하는 사용자 종합 분석 코멘트 또는 총평입니다.
                                          ANALYSIS_COMMENT CLOB,

    -- 외래 키 제약 조건: USER_ID는 TB_USERS 테이블의 USER_ID를 참조합니다. 사용자가 삭제되면 관련 요약도 삭제됩니다.
                                          CONSTRAINT FK_SUMMARY_USER FOREIGN KEY (USER_ID) REFERENCES TB_USERS(USER_ID) ON DELETE CASCADE,

    -- 외래 키 제약 조건: PSYCHO_IMAGE_RESULT_ID는 TB_PSYCHOLOGICAL_IMAGE_RESULTS 테이블의 RESULT_ID를 참조합니다.
                                          CONSTRAINT FK_SUMMARY_PSYCHO_IMAGE FOREIGN KEY (PSYCHO_IMAGE_RESULT_ID) REFERENCES TB_PSYCHOLOGICAL_IMAGE_RESULTS(RESULT_ID) ON DELETE CASCADE,

    -- 외래 키 제약 조건: PERSONALITY_RESULT_ID는 TB_PERSONALITY_RESULTS 테이블의 PERSONALITY_ID를 참조합니다.
                                          CONSTRAINT FK_SUMMARY_PERSONALITY FOREIGN KEY (PERSONALITY_RESULT_ID) REFERENCES TB_PERSONALITY_RESULTS(PERSONALITY_ID) ON DELETE CASCADE,

    -- ⭐ 새로 추가된 외래 키 제약 조건: PSYCHO_SCALE_RESULT_ID는 TB_PSYCHOLOGICAL_SCALE_RESULTS 테이블의 RESULT_ID를 참조합니다.
                                          CONSTRAINT FK_SUMMARY_PSYCHO_SCALE FOREIGN KEY (PSYCHO_SCALE_RESULT_ID) REFERENCES TB_PSYCHOLOGICAL_SCALE_RESULTS(RESULT_ID) ON DELETE CASCADE,

    -- 외래 키 제약 조건: EMOTION_LOG_ID는 TB_EMOTION_LOGS 테이블의 EMOTION_LOG_ID를 참조합니다.
                                          CONSTRAINT FK_SUMMARY_EMOTION FOREIGN KEY (EMOTION_LOG_ID) REFERENCES TB_EMOTION_LOGS(EMOTION_LOG_ID) ON DELETE CASCADE,

    -- 외래 키 제약 조건: SUMMARY_ID는 TB_COUNSELING_ANALYSIS_SUMMARIES 테이블의 SUMMARY_ID를 참조합니다.
                                          CONSTRAINT FK_SUMMARY_COUNSELING FOREIGN KEY (SUMMARY_ID) REFERENCES TB_COUNSELING_ANALYSIS_SUMMARIES(SUMMARY_ID) ON DELETE CASCADE
);

-- 테이블 및 컬럼 코멘트 추가 (Oracle SQL 문법)
COMMENT ON TABLE TB_USER_ANALYSIS_SUMMARY IS '사용자별 심리/성격 검사 및 기타 분석 결과 종합 요약';
COMMENT ON COLUMN TB_USER_ANALYSIS_SUMMARY.USER_SUMMARY_ID IS '종합 분석 요약의 고유 식별자';
COMMENT ON COLUMN TB_USER_ANALYSIS_SUMMARY.USER_ID IS 'TB_USERS 테이블의 사용자 ID 참조';
COMMENT ON COLUMN TB_USER_ANALYSIS_SUMMARY.LAST_UPDATED IS '종합 요약의 최종 업데이트 시간';
COMMENT ON COLUMN TB_USER_ANALYSIS_SUMMARY.PSYCHO_IMAGE_RESULT_ID IS 'TB_PSYCHOLOGICAL_IMAGE_RESULTS 테이블 (이미지-텍스트 심리 검사 결과) 참조';
COMMENT ON COLUMN TB_USER_ANALYSIS_SUMMARY.PERSONALITY_RESULT_ID IS 'TB_PERSONALITY_RESULTS 테이블 (성격 검사 결과) 참조';
COMMENT ON COLUMN TB_USER_ANALYSIS_SUMMARY.PSYCHO_SCALE_RESULT_ID IS 'TB_PSYCHOLOGICAL_SCALE_RESULTS 테이블 (척도 기반 심리 검사 결과) 참조';
COMMENT ON COLUMN TB_USER_ANALYSIS_SUMMARY.EMOTION_LOG_ID IS 'TB_EMOTION_LOGS 테이블 (감정 로그) 참조';
COMMENT ON COLUMN TB_USER_ANALYSIS_SUMMARY.SUMMARY_ID IS 'TB_COUNSELING_ANALYSIS_SUMMARIES 테이블 (상담 분석 요약) 참조';
COMMENT ON COLUMN TB_USER_ANALYSIS_SUMMARY.ANALYSIS_COMMENT IS 'AI가 제공하는 사용자 종합 분석 코멘트';

-- 27. TB_QUEST_REWARDS
CREATE TABLE TB_QUEST_REWARDS (
                                  REWARD_ID NUMBER(19) PRIMARY KEY,
                                  QUEST_NAME VARCHAR2(100) NOT NULL,           -- 퀘스트/업적 이름
                                  REQUIRED_POINTS NUMBER(10) NOT NULL,         -- 구매/획득 필요 포인트
                                  REWARD_RARITY VARCHAR2(20) NOT NULL,         -- 레어리티(레어/에픽/유니크/레전더리/플래티넘)
                                  TITLE_REWARD VARCHAR2(50),                   -- 뱃지/칭호명
                                  DESCRIPTION VARCHAR2(1000),                  -- 설명
                                  IMAGE_PATH VARCHAR2(255)                     -- 뱃지 이미지 경로
);

COMMENT ON TABLE TB_QUEST_REWARDS IS '퀘스트/뱃지 보상 마스터';
COMMENT ON COLUMN TB_QUEST_REWARDS.REWARD_RARITY IS '보상 등급(레어, 에픽, 유니크, 레전더리, 플래티넘)';
COMMENT ON COLUMN TB_QUEST_REWARDS.IMAGE_PATH IS '뱃지 이미지 경로';

-- 샘플 데이터
INSERT INTO TB_QUEST_REWARDS VALUES (1, '첫 마음 다짐', 100, '레어', '정신력 수련생', '마음의 기초를 다지는 첫걸음', '/images/badge/badge_1.png');
INSERT INTO TB_QUEST_REWARDS VALUES (2, '감정 일기', 200, '레어', '감정의 기록자', '자신의 감정을 기록하는 따뜻한 마음', '/images/badge/badge_2.png');
INSERT INTO TB_QUEST_REWARDS VALUES (3, '자기 이해', 300, '에픽', '내면의 탐구자', '자신의 내면을 깊이 탐구한 자에게', '/images/badge/badge_3.png');
INSERT INTO TB_QUEST_REWARDS VALUES (4, '스트레스 관리', 400, '에픽', '평온의 수호자', '마음의 평온을 지키는 강인한 영혼', '/images/badge/badge_4.png');
INSERT INTO TB_QUEST_REWARDS VALUES (5, '깊은 대화', 600, '유니크', '마음의 대화술사', '진정한 대화로 마음을 나누는 자에게', '/images/badge/badge_5.png');
INSERT INTO TB_QUEST_REWARDS VALUES (6, '긍정의 습관', 700, '유니크', '희망의 전파자', '긍정의 에너지를 퍼뜨리는 빛나는 존재', '/images/badge/badge_6.png');
INSERT INTO TB_QUEST_REWARDS VALUES (7, '자아 성장', 800, '레전더리', '성장의 마스터', '끊임없는 성장으로 빛나는 별과 같은 당신', '/images/badge/badge_7.png');
INSERT INTO TB_QUEST_REWARDS VALUES (8, '마음의 여정', 1000, '레전더리', '영혼의 길잡이', '마음의 여정을 이끄는 위대한 길잡이', '/images/badge/badge_8.png');
INSERT INTO TB_QUEST_REWARDS VALUES (9, '심리학 마스터', 1200, '플래티넘', '심리학의 현자', '심리학의 깊은 지식을 가진 현명한 자', '/images/badge/badge_9.png');
INSERT INTO TB_QUEST_REWARDS VALUES (10, '치유의 달인', 1500, '플래티넘', '치유의 대가', '마음의 상처를 치유하는 대가', '/images/badge/badge_10.png');

-- 28. TB_USER_POINTS
CREATE TABLE TB_USER_POINTS (
                                USER_ID VARCHAR2(255) PRIMARY KEY,
                                POINTS NUMBER(10) DEFAULT 0 NOT NULL -- 현재 포인트
);

COMMENT ON TABLE TB_USER_POINTS IS '사용자 포인트 관리';
COMMENT ON COLUMN TB_USER_POINTS.USER_ID IS '사용자 ID';
COMMENT ON COLUMN TB_USER_POINTS.POINTS IS '사용자 보유 포인트';

-- 샘플 데이터
INSERT INTO TB_USER_POINTS VALUES ('user001', 2450);
INSERT INTO TB_USER_POINTS VALUES ('user002', 3000);

-- 29. TB_USER_REWARDS (사용자 보상 내역 테이블)
-- 설명: 사용자가 획득한 뱃지/칭호 보상을 관리하는 테이블로, 보상 획득 및 장착 상태를 저장합니다.
CREATE TABLE TB_USER_REWARDS (
                                 USER_REWARD_ID NUMBER(19) PRIMARY KEY,            -- 사용자 보상 고유 ID (시퀀스 등으로 관리)
                                 USER_ID VARCHAR2(255) NOT NULL,                   -- 사용자 ID (TB_USERS 테이블의 USER_ID 참조)
                                 REWARD_ID NUMBER(19) NOT NULL,                    -- 보상(뱃지/칭호) ID (TB_QUEST_REWARDS 테이블의 REWARD_ID 참조)
                                 ACQUIRED_AT DATE DEFAULT SYSDATE,                 -- 획득(구매) 일시
                                 IS_APPLIED NUMBER(1) DEFAULT 0 CHECK (IS_APPLIED IN (0, 1)), -- 적용 여부 (0: 미적용, 1: 적용)
                                 IS_EQUIPPED NUMBER(1) DEFAULT 0 CHECK (IS_EQUIPPED IN (0, 1)), -- 장착 여부 (0: 미장착, 1: 장착)
                                 CONSTRAINT FK_USER_REWARD_USER FOREIGN KEY (USER_ID) REFERENCES TB_USERS(USER_ID) ON DELETE CASCADE, -- 외래 키: USER_ID가 TB_USERS 테이블 참조, 사용자 삭제 시 보상도 삭제
                                 CONSTRAINT FK_USER_REWARD_REWARD FOREIGN KEY (REWARD_ID) REFERENCES TB_QUEST_REWARDS(REWARD_ID) ON DELETE CASCADE, -- 외래 키: REWARD_ID가 TB_QUEST_REWARDS 테이블 참조, 보상 삭제 시 내역도 삭제
                                 CONSTRAINT UK_USER_REWARD UNIQUE (USER_ID, REWARD_ID) -- 고유 제약: 한 사용자는 같은 보상을 한 번만 획득
);

-- TB_USER_REWARDS 테이블 및 컬럼에 대한 주석
COMMENT ON TABLE TB_USER_REWARDS IS '사용자 뱃지/칭호 획득 내역';
COMMENT ON COLUMN TB_USER_REWARDS.USER_REWARD_ID IS '사용자 보상 고유 ID';
COMMENT ON COLUMN TB_USER_REWARDS.USER_ID IS '사용자 ID (TB_USERS 테이블의 USER_ID 참조)';
COMMENT ON COLUMN TB_USER_REWARDS.REWARD_ID IS '보상(뱃지/칭호) ID (TB_QUEST_REWARDS 테이블의 REWARD_ID 참조)';
COMMENT ON COLUMN TB_USER_REWARDS.ACQUIRED_AT IS '획득(구매) 일시';
COMMENT ON COLUMN TB_USER_REWARDS.IS_APPLIED IS '보상 적용 여부 (0: 미적용, 1: 적용)';
COMMENT ON COLUMN TB_USER_REWARDS.IS_EQUIPPED IS '보상 장착 여부 (0: 미장착, 1: 장착)';


-- USER_REWARD_ID는 시퀀스(예: SEQ_USER_REWARD_ID.NEXTVAL)로 관리하는 것이 일반적입니다.
-- 예시:
-- INSERT INTO TB_USER_REWARDS (USER_REWARD_ID, USER_ID, REWARD_ID, ACQUIRED_AT, IS_APPLIED)
-- VALUES (SEQ_USER_REWARD_ID.NEXTVAL, 'user1', 1, SYSDATE, 1);

-- 30. TB_QUEST (퀘스트 테이블)
CREATE TABLE TB_QUEST (
                          QUEST_ID NUMBER(19) PRIMARY KEY,           -- 퀘스트 고유 ID
                          USER_ID VARCHAR2(255) NOT NULL,            -- 사용자 ID
                          QUEST_NAME VARCHAR2(200) NOT NULL,         -- 퀘스트 명
                          QUEST_POINTS NUMBER(5) DEFAULT 5,          -- 퀘스트 보상 포인트
                          IS_COMPLETED NUMBER(1) DEFAULT 0 NOT NULL CHECK (IS_COMPLETED IN (0,1)), -- 완료 여부 (0: 미완료, 1: 완료)
                          CREATED_AT DATE DEFAULT SYSDATE NOT NULL,  -- 생성 일시
                          CONSTRAINT FK_QUEST_USER FOREIGN KEY (USER_ID) REFERENCES TB_USERS(USER_ID) ON DELETE CASCADE
);

COMMENT ON TABLE TB_QUEST IS '퀘스트';
COMMENT ON COLUMN TB_QUEST.QUEST_ID IS '퀘스트 고유 ID';
COMMENT ON COLUMN TB_QUEST.USER_ID IS '사용자 ID';
COMMENT ON COLUMN TB_QUEST.QUEST_NAME IS '퀘스트 명';
COMMENT ON COLUMN TB_QUEST.QUEST_POINTS IS '퀘스트 보상 포인트';
COMMENT ON COLUMN TB_QUEST.IS_COMPLETED IS '완료 여부 (0: 미완료, 1: 완료)';
COMMENT ON COLUMN TB_QUEST.CREATED_AT IS '생성 일시';

-- 31. TB_CONTENTS
CREATE TABLE TB_CONTENTS (
                             CONTENT_ID NUMBER(19) PRIMARY KEY,         -- 콘텐츠 고유 ID (시퀀스 등으로 관리)
                             USER_ID VARCHAR2(255),                     -- 사용자 ID (TB_USERS.USER_ID, 맞춤형 추천일 경우)
                             GUIDANCE_TYPE_ID NUMBER(19),               -- 가이드 유형 ID (TB_GUIDANCE_TYPES.GUIDANCE_TYPE_ID)
                             USER_SUMMARY_ID NUMBER(19),                -- 사용자 분석 요약 ID (TB_USER_ANALYSIS_SUMMARY.USER_SUMMARY_ID)
                             TITLE VARCHAR2(100) NOT NULL,              -- 콘텐츠 제목
                             URL VARCHAR2(255) NOT NULL,                -- 콘텐츠 URL (YouTube 등)
                             SOURCE VARCHAR2(100),                      -- 콘텐츠 출처(YouTube, Pixabay 등)
                             CONSTRAINT FK_CONTENT_USER FOREIGN KEY (USER_ID) REFERENCES TB_USERS(USER_ID) ON DELETE SET NULL,
                             CONSTRAINT FK_CONTENT_GUIDANCE_TYPE FOREIGN KEY (GUIDANCE_TYPE_ID) REFERENCES TB_GUIDANCE_TYPES(GUIDANCE_TYPE_ID) ON DELETE SET NULL,
                             CONSTRAINT FK_CONTENT_USER_SUMMARY FOREIGN KEY (USER_SUMMARY_ID) REFERENCES TB_USER_ANALYSIS_SUMMARY(USER_SUMMARY_ID) ON DELETE SET NULL
);

COMMENT ON TABLE TB_CONTENTS IS 'AI 추천 콘텐츠';
COMMENT ON COLUMN TB_CONTENTS.CONTENT_ID IS '콘텐츠 고유 ID';
COMMENT ON COLUMN TB_CONTENTS.USER_ID IS '사용자 ID (TB_USERS.USER_ID, 맞춤형 추천일 경우)';
COMMENT ON COLUMN TB_CONTENTS.GUIDANCE_TYPE_ID IS '가이드 유형 ID (TB_GUIDANCE_TYPES.GUIDANCE_TYPE_ID)';
COMMENT ON COLUMN TB_CONTENTS.USER_SUMMARY_ID IS '사용자 분석 요약 ID (TB_USER_ANALYSIS_SUMMARY.USER_SUMMARY_ID)';
COMMENT ON COLUMN TB_CONTENTS.TITLE IS '콘텐츠 제목';
COMMENT ON COLUMN TB_CONTENTS.URL IS '콘텐츠 URL (YouTube 등)';
COMMENT ON COLUMN TB_CONTENTS.SOURCE IS '콘텐츠 출처(YouTube, Pixabay 등)';

-- 32. TB_QUEST_RECOMMENDATIONS
CREATE TABLE TB_QUEST_RECOMMENDATIONS (
                                          RECOMMEND_ID   NUMBER(19) PRIMARY KEY,         -- 추천 퀘스트 고유 ID
                                          TITLE          VARCHAR2(100) NOT NULL,         -- 퀘스트 제목
                                          DESCRIPTION    VARCHAR2(1000),                 -- 퀘스트 설명
                                          DURATION       NUMBER(5),                   -- 권장 소요 시간
                                          REWARD         NUMBER(5),                   -- 보상 정보
                                          CREATED_AT     DATE DEFAULT SYSDATE            -- 생성일시
);

COMMENT ON TABLE TB_QUEST_RECOMMENDATIONS IS '추천 퀘스트 마스터';
COMMENT ON COLUMN TB_QUEST_RECOMMENDATIONS.RECOMMEND_ID IS '추천 퀘스트 고유 ID';
COMMENT ON COLUMN TB_QUEST_RECOMMENDATIONS.TITLE IS '추천 퀘스트 제목';
COMMENT ON COLUMN TB_QUEST_RECOMMENDATIONS.DESCRIPTION IS '추천 퀘스트 설명';
COMMENT ON COLUMN TB_QUEST_RECOMMENDATIONS.DURATION IS '권장 소요 시간';
COMMENT ON COLUMN TB_QUEST_RECOMMENDATIONS.REWARD IS '보상 정보';
COMMENT ON COLUMN TB_QUEST_RECOMMENDATIONS.CREATED_AT IS '생성일시';

-- 33. TB_EMOTION_QUEST_RECOMM
CREATE TABLE TB_EMOTION_QUEST_RECOMM (
                                         EMOTION_ID     NUMBER(19) NOT NULL,            -- 감정 ID (TB_EMOTIONS 참조)
                                         RECOMMEND_ID   NUMBER(19) NOT NULL,            -- 추천 퀘스트 ID (TB_QUEST_RECOMMENDATIONS 참조)
                                         PRIORITY       NUMBER(3) DEFAULT 1,            -- 우선순위(선택)
                                         CONSTRAINT PK_EMOTION_QUEST_RECOMM PRIMARY KEY (EMOTION_ID, RECOMMEND_ID),
                                         CONSTRAINT FK_EQR_EMOTION FOREIGN KEY (EMOTION_ID) REFERENCES TB_EMOTIONS(EMOTION_ID) ON DELETE CASCADE,
                                         CONSTRAINT FK_EQR_RECOMM FOREIGN KEY (RECOMMEND_ID) REFERENCES TB_QUEST_RECOMMENDATIONS(RECOMMEND_ID) ON DELETE CASCADE
);

COMMENT ON TABLE TB_EMOTION_QUEST_RECOMM IS '감정별 추천 퀘스트 매핑';
COMMENT ON COLUMN TB_EMOTION_QUEST_RECOMM.EMOTION_ID IS '감정 ID';
COMMENT ON COLUMN TB_EMOTION_QUEST_RECOMM.RECOMMEND_ID IS '추천 퀘스트 ID';
COMMENT ON COLUMN TB_EMOTION_QUEST_RECOMM.PRIORITY IS '추천 우선순위';

-- 34. TB_CONTENT_RECOMMENDATIONS (유튜브 추천 컨텐츠 마스터)
CREATE TABLE TB_CONTENT_RECOMMENDATIONS (
                                            CONTENT_ID     NUMBER(19) PRIMARY KEY,         -- 컨텐츠 고유 ID
                                            YOUTUBE_ID     VARCHAR2(20) NOT NULL UNIQUE,   -- 유튜브 영상 ID (예: 2OEL4P1Rz04)
                                            THEME          VARCHAR2(50),                   -- 테마
                                            TITLE          VARCHAR2(200),                  -- 유튜브 영상 제목 (자동 업데이트)
                                            DESCRIPTION    VARCHAR2(2000),                 -- 유튜브 영상 설명 (자동 업데이트)
                                            THUMBNAIL_URL  VARCHAR2(500),                  -- 썸네일 URL (자동 업데이트)
                                            DURATION       VARCHAR2(10),                   -- 재생 시간 (자동 업데이트, 예: PT1H2M30S)
                                            VIEW_COUNT     NUMBER(19),                     -- 조회수 (자동 업데이트)
                                            PUBLISHED_AT   DATE,                           -- 업로드 날짜 (자동 업데이트)
                                            IS_ACTIVE      NUMBER(1) DEFAULT 1,            -- 활성화 여부 (1: 활성, 0: 비활성)
                                            CREATED_AT     DATE DEFAULT SYSDATE,           -- 생성일시
                                            UPDATED_AT     DATE DEFAULT SYSDATE            -- 수정일시
);

COMMENT ON TABLE TB_CONTENT_RECOMMENDATIONS IS '유튜브 추천 컨텐츠 마스터';
COMMENT ON COLUMN TB_CONTENT_RECOMMENDATIONS.CONTENT_ID IS '컨텐츠 고유 ID';
COMMENT ON COLUMN TB_CONTENT_RECOMMENDATIONS.YOUTUBE_ID IS '유튜브 영상 ID';
COMMENT ON COLUMN TB_CONTENT_RECOMMENDATIONS.THEME IS '테마';
COMMENT ON COLUMN TB_CONTENT_RECOMMENDATIONS.TITLE IS '유튜브 영상 제목 (자동 업데이트)';
COMMENT ON COLUMN TB_CONTENT_RECOMMENDATIONS.DESCRIPTION IS '유튜브 영상 설명 (자동 업데이트)';
COMMENT ON COLUMN TB_CONTENT_RECOMMENDATIONS.THUMBNAIL_URL IS '썸네일 URL (자동 업데이트)';
COMMENT ON COLUMN TB_CONTENT_RECOMMENDATIONS.DURATION IS '재생 시간 (자동 업데이트)';
COMMENT ON COLUMN TB_CONTENT_RECOMMENDATIONS.VIEW_COUNT IS '조회수 (자동 업데이트)';
COMMENT ON COLUMN TB_CONTENT_RECOMMENDATIONS.PUBLISHED_AT IS '업로드 날짜 (자동 업데이트)';
COMMENT ON COLUMN TB_CONTENT_RECOMMENDATIONS.IS_ACTIVE IS '활성화 여부';
COMMENT ON COLUMN TB_CONTENT_RECOMMENDATIONS.CREATED_AT IS '생성일시';
COMMENT ON COLUMN TB_CONTENT_RECOMMENDATIONS.UPDATED_AT IS '수정일시';

-- 35. TB_EMOTION_CONTENT_RECOMM (감정별 추천 컨텐츠 매핑)
CREATE TABLE TB_EMOTION_CONTENT_RECOMM (
                                           EMOTION_ID     NUMBER(19) NOT NULL,            -- 감정 ID (TB_EMOTIONS 참조)
                                           CONTENT_ID     NUMBER(19) NOT NULL,            -- 컨텐츠 ID (TB_CONTENT_RECOMMENDATIONS 참조)
                                           PRIORITY       NUMBER(3) DEFAULT 1,            -- 우선순위
                                           CONSTRAINT PK_EMOTION_CONTENT_RECOMM PRIMARY KEY (EMOTION_ID, CONTENT_ID),
                                           CONSTRAINT FK_ECR_EMOTION FOREIGN KEY (EMOTION_ID) REFERENCES TB_EMOTIONS(EMOTION_ID) ON DELETE CASCADE,
                                           CONSTRAINT FK_ECR_CONTENT FOREIGN KEY (CONTENT_ID) REFERENCES TB_CONTENT_RECOMMENDATIONS(CONTENT_ID) ON DELETE CASCADE
);

COMMENT ON TABLE TB_EMOTION_CONTENT_RECOMM IS '감정별 추천 컨텐츠 매핑';
COMMENT ON COLUMN TB_EMOTION_CONTENT_RECOMM.EMOTION_ID IS '감정 ID';
COMMENT ON COLUMN TB_EMOTION_CONTENT_RECOMM.CONTENT_ID IS '컨텐츠 ID';
COMMENT ON COLUMN TB_EMOTION_CONTENT_RECOMM.PRIORITY IS '추천 우선순위';

-- 3. TB_PSYCHOLOGY_CARD 테이블 재생성
CREATE TABLE TB_PSYCHOLOGY_CARD (
                                    CARD_ID NUMBER PRIMARY KEY,                -- 카드 고유 ID
                                    CARD_TITLE VARCHAR2(200),                  -- 카드 제목
                                    CARD_DESCRIPTION VARCHAR2(500),            -- 카드 설명
                                    FORTUNE_MESSAGE VARCHAR2(400),             -- 카드에 표시될 문구
                                    CARD_TYPE VARCHAR2(100),                   -- 카드 타입
                                    CARD_DESIGN_TYPE VARCHAR2(20),             -- 디자인 타입 ('DESIGN_A', 'DESIGN_B', 'DESIGN_C')
                                    DESIGN_IMAGE_URL VARCHAR2(500),            -- 디자인 이미지 경로
                                    DESIGN_COLOR_SCHEME VARCHAR2(100),         -- 색상 정보
                                    IS_ACTIVE NUMBER(1) DEFAULT 1,             -- 활성화 여부 (0: 비활성, 1: 활성)
                                    CREATED_DATE DATE DEFAULT SYSDATE          -- 카드 생성일시
);

-- 4. TB_USER_CARD_HISTORY 테이블 재생성
CREATE TABLE TB_USER_CARD_HISTORY (
                                      HISTORY_ID NUMBER PRIMARY KEY,             -- 기록 고유 ID
                                      USER_ID VARCHAR2(50),                      -- 사용자 식별자
                                      CARD_ID NUMBER,                            -- 뽑은 카드 ID
                                      DRAWN_DATE DATE DEFAULT SYSDATE,           -- 뽑은 날짜
                                      DRAWN_TIME TIMESTAMP DEFAULT SYSTIMESTAMP, -- 뽑은 시간
                                      IS_READ NUMBER(1) DEFAULT 0,               -- 읽음 여부 (0: 안읽음, 1: 읽음)
                                      CONSTRAINT FK_UCH_USER FOREIGN KEY (USER_ID)
                                          REFERENCES TB_USERS(USER_ID),
                                      CONSTRAINT FK_UCH_CARD FOREIGN KEY (CARD_ID)
                                          REFERENCES TB_PSYCHOLOGY_CARD(CARD_ID)
);

-- 5. 컬럼 코멘트 추가
COMMENT ON TABLE TB_PSYCHOLOGY_CARD IS '심리 카드 문구 및 메타정보를 저장하는 테이블';
COMMENT ON COLUMN TB_PSYCHOLOGY_CARD.CARD_ID IS '카드 고유 ID';
COMMENT ON COLUMN TB_PSYCHOLOGY_CARD.CARD_TITLE IS '카드 제목';
COMMENT ON COLUMN TB_PSYCHOLOGY_CARD.CARD_DESCRIPTION IS '카드 설명';
COMMENT ON COLUMN TB_PSYCHOLOGY_CARD.FORTUNE_MESSAGE IS '카드에 표시될 심리 메시지';
COMMENT ON COLUMN TB_PSYCHOLOGY_CARD.CARD_TYPE IS '카드 타입';
COMMENT ON COLUMN TB_PSYCHOLOGY_CARD.CARD_DESIGN_TYPE IS '디자인 타입';
COMMENT ON COLUMN TB_PSYCHOLOGY_CARD.DESIGN_IMAGE_URL IS '디자인 이미지 경로';
COMMENT ON COLUMN TB_PSYCHOLOGY_CARD.DESIGN_COLOR_SCHEME IS '색상 정보';
COMMENT ON COLUMN TB_PSYCHOLOGY_CARD.IS_ACTIVE IS '활성화 여부';
COMMENT ON COLUMN TB_PSYCHOLOGY_CARD.CREATED_DATE IS '카드 생성일시';

COMMENT ON TABLE TB_USER_CARD_HISTORY IS '사용자의 카드 뽑기 내역 저장 테이블';
COMMENT ON COLUMN TB_USER_CARD_HISTORY.HISTORY_ID IS '기록 고유 ID';
COMMENT ON COLUMN TB_USER_CARD_HISTORY.USER_ID IS '사용자 ID';
COMMENT ON COLUMN TB_USER_CARD_HISTORY.CARD_ID IS '뽑은 카드 ID (FOREIGN KEY)';
COMMENT ON COLUMN TB_USER_CARD_HISTORY.DRAWN_DATE IS '카드 뽑기 날짜';
COMMENT ON COLUMN TB_USER_CARD_HISTORY.DRAWN_TIME IS '카드 뽑기 시간';
COMMENT ON COLUMN TB_USER_CARD_HISTORY.IS_READ IS '읽음 여부 (0: 안읽음, 1: 읽음)';


-- 38. TB_USER_CARD_DESIGN (사용자별 현재 카드 디자인 상태 저장)
CREATE TABLE TB_USER_CARD_DESIGN (
                                     USER_ID VARCHAR2(255) PRIMARY KEY,
                                     CURRENT_DESIGN_TYPE VARCHAR2(20) NOT NULL,
                                     DESIGN_ASSIGNED_DATE DATE DEFAULT SYSDATE,
                                     LAST_UPDATED DATE DEFAULT SYSDATE,
                                     CONSTRAINT FK_UCD_USER FOREIGN KEY (USER_ID)
                                         REFERENCES TB_USERS(USER_ID)
);


-- 트리거

----0. 카드 INSERT 시 자동 ID 할당 트리거
--CREATE OR REPLACE TRIGGER TRG_PSYCHOLOGY_CARD_ID
--BEFORE INSERT ON PSYCHOLOGY_CARD
--FOR EACH ROW
--BEGIN
--    :NEW.ID := PSYCHOLOGY_CARD_SEQ.NEXTVAL;
--END;
--/
--
---- 카드 무작위 정렬
--SELECT *
--FROM (
--    SELECT * FROM PSYCHOLOGY_CARD
--    ORDER BY DBMS_RANDOM.VALUE     -- 무작위 정렬
--)
--WHERE ROWNUM = 1;                  -- 상위 1개 행만 조회
--
--
---- TB_USER_CARD_HISTORY 트리거 생성
--CREATE OR REPLACE TRIGGER TRG_USER_CARD_HISTORY_ID
--BEFORE INSERT ON USER_CARD_HISTORY
--FOR EACH ROW
--BEGIN
--    IF :NEW.ID IS NULL THEN
--        SELECT SEQ_USER_CARD_HISTORY_ID.NEXTVAL
--        INTO :NEW.ID
--        FROM DUAL;
--    END IF;
--END;


-- 1. 생성/수정 시간 자동처리
--(250715 신선혜 : 주석처리함. 샘플데이터 삽입 시 sysdate 조건으로 인해 데이터 날짜가 정상적으로 삽입 안됨  )
/*
-- 1. TRG_COMMENT_TIME
CREATE OR REPLACE TRIGGER TRG_COMMENT_TIME
BEFORE INSERT OR UPDATE ON TB_COMMENTS
                                                                            FOR EACH ROW
BEGIN
  IF INSERTING THEN
    :NEW.CREATED_AT := SYSDATE;
  ELSIF UPDATING THEN
    :NEW.CREATED_AT := NVL(:OLD.CREATED_AT, SYSDATE);
END IF;
END;
/

-- 2. TRG_NOTICE_TIME (변경 없음)
CREATE OR REPLACE TRIGGER TRG_NOTICE_TIME
BEFORE INSERT OR UPDATE ON TB_NOTICES
                            FOR EACH ROW
BEGIN
  IF INSERTING THEN
    :NEW.NOTICE_DATE := SYSDATE;
--    :NEW.UPDATED_AT := NULL;
  ELSIF UPDATING THEN
    :NEW.NOTICE_DATE := NVL(:OLD.NOTICE_DATE, SYSDATE);
--    :NEW.UPDATED_AT := SYSDATE;
END IF;
END;
/

-- 3. TRG_INQUIRIES_TIME (변경 없음)
CREATE OR REPLACE TRIGGER TRG_INQUIRIES_TIME
BEFORE INSERT OR UPDATE ON TB_INQUIRIES
                            FOR EACH ROW
BEGIN
  IF INSERTING THEN
    :NEW.CREATED_AT := SYSDATE;
  ELSIF UPDATING THEN
    :NEW.CREATED_AT := NVL(:OLD.CREATED_AT, SYSDATE);
END IF;
END;
/
*/

-- 4. TRG_USER_UPDATE_AUDIT
--CREATE OR REPLACE TRIGGER TRG_USER_UPDATE_AUDIT
--AFTER UPDATE ON TB_USERS
--FOR EACH ROW
--BEGIN
--  IF (:OLD.USER_PWD != :NEW.USER_PWD OR
--      (:OLD.USER_PWD IS NULL AND :NEW.USER_PWD IS NOT NULL) OR
--      (:OLD.USER_PWD IS NOT NULL AND :NEW.USER_PWD IS NULL) OR
--      :OLD.STATUS != :NEW.STATUS OR
--      (:OLD.STATUS IS NULL AND :NEW.STATUS IS NOT NULL) OR
--      (:OLD.STATUS IS NOT NULL AND :NEW.STATUS IS NULL)) THEN
--    INSERT INTO TB_SYSTEM_LOGS (
--      LOG_ID,
--      USER_ID,
--      ACTION,
--      BEFORE_DATA,
--      AFTER_DATA,
--      CREATED_AT
--    ) VALUES (
--      SEQ_SYSTEM_LOGS_LOG_ID.NEXTVAL,
--      :NEW.USER_ID,
--      'USER UPDATE',
--      'PWD: ' || NVL(:OLD.USER_PWD, 'NULL') || ', STATUS: ' || NVL(:OLD.STATUS, 'NULL'),
--      'PWD: ' || NVL(:NEW.USER_PWD, 'NULL') || ', STATUS: ' || NVL(:NEW.STATUS, 'NULL'),
--      SYSDATE
--    );
--  END IF;
--END;
--/

---- 5. TRG_FEEDBACK_COMPLETION_REWARD
--CREATE OR REPLACE TRIGGER TRG_FEEDBACK_COMPLETION_REWARD
--AFTER UPDATE ON TB_FEEDBACK_RECOMMENDATIONS
--                 FOR EACH ROW
--                 WHEN (NEW.IS_COMPLETED = 1 AND OLD.IS_COMPLETED = 0)
--DECLARE
--v_points_reward NUMBER := 0;
--  v_reward_type VARCHAR2(20);
--  v_user_exists NUMBER;
--  v_current_points NUMBER;
--  v_current_level NUMBER;
--  v_threshold NUMBER;
--BEGIN
--  -- REWARD_ID가 NULL이면 처리 중단
--  IF :NEW.REWARD_ID IS NULL THEN
--    RETURN;
--END IF;
--
----  -- TB_QUEST_REWARDS에서 보상 정보 조회
----BEGIN
----SELECT NVL(POINTS_REWARD, 0), REWARD_TYPE
----INTO v_points_reward, v_reward_type
----FROM TB_QUEST_REWARDS
----WHERE REWARD_ID = :NEW.REWARD_ID;
----EXCEPTION
----    WHEN NO_DATA_FOUND THEN
----      RETURN;
----END;
--
----  -- TB_USER_POINTS 레코드 존재 여부 확인
----SELECT COUNT(*)
----INTO v_user_exists
----FROM TB_USER_POINTS
----WHERE USER_ID = :NEW.USER_ID;
----
------ 동시성 제어를 위해 TB_USER_POINTS 잠금
----IF v_user_exists = 0 THEN
----    INSERT INTO TB_USER_POINTS (USER_ID, POINTS)
----    VALUES (:NEW.USER_ID, v_points_reward, 1, 100);
----ELSE
----UPDATE TB_USER_POINTS
----SET POINTS = POINTS + v_points_reward
----WHERE USER_ID = :NEW.USER_ID;
--
------ 레벨 승급 로직
----SELECT POINTS, USER_LEVEL, LEVEL_POINTS_THRESHOLD
----INTO v_current_points, v_current_level, v_threshold
----FROM TB_USER_POINTS
----WHERE USER_ID = :NEW.USER_ID FOR UPDATE;
----
----IF v_current_points >= v_threshold THEN
----UPDATE TB_USER_POINTS
----SET USER_LEVEL = USER_LEVEL + 1,
----    LEVEL_POINTS_THRESHOLD = LEVEL_POINTS_THRESHOLD * 1.5
----WHERE USER_ID = :NEW.USER_ID;
----END IF;
----END IF;
--
----  -- TB_USER_REWARDS에 보상 기록
----INSERT INTO TB_USER_REWARDS (USER_REWARD_ID, USER_ID, REWARD_ID, IS_APPLIED)
----VALUES (SEQ_USER_REWARDS_USER_REWARD_ID.NEXTVAL, :NEW.USER_ID, :NEW.REWARD_ID,
----        CASE WHEN v_reward_type = 'TITLE' THEN 1 ELSE 0 END);
----EXCEPTION
----  WHEN DUP_VAL_ON_INDEX THEN
----    NULL; -- UK_USER_REWARD 제약 위반 무시
----WHEN OTHERS THEN
----    RAISE_APPLICATION_ERROR(-20001, 'Error in reward processing: ' || SQLERRM);
----END;



-- 6. 결과 입력 시 사용자 요약 정보 업데이트
-- CREATE OR REPLACE TRIGGER TRG_SIMULATION_RESULT_SUMMARY
-- AFTER INSERT ON TB_SIMULATION_RESULT
-- FOR EACH ROW
-- BEGIN
--   UPDATE TB_USER_ANALYSIS_SUMMARY
--   SET RESULT_ID = :NEW.RESULT_ID,
--       LAST_UPDATED = SYSDATE
--   WHERE USER_ID = (
--     SELECT USER_ID FROM TB_SIMULATION_SETTING WHERE SETTING_ID = :NEW.SETTING_ID
--   );
-- END;
-- /


-- 샘플 데이터

-- TB_USERS
INSERT INTO TB_USERS (USER_ID, PHONE, USER_PWD, USERNAME, PROFILE_IMAGE, CREATED_AT, UPDATED_AT, STATUS, ADMIN_YN)
VALUES ('user001', '010-1234-5678', '$2a$10$N.zmdr9k7uOCQb376NoUnuTJ8iAt6Z5EHsM8lE9lBOsl7iKTVEFDa', '홍길동', null, SYSDATE, NULL, 1, 'Y');

INSERT INTO TB_USERS (USER_ID, PHONE, USER_PWD, USERNAME, PROFILE_IMAGE, CREATED_AT, UPDATED_AT, STATUS, ADMIN_YN)
VALUES ('user002', '010-1235-5679', '$2a$10$N.zmdr9k7uOCQb376NoUnuTJ8iAt6Z5EHsM8lE9lBOsl7iKTVEFDa', '홍길순', null, SYSDATE, NULL, 1, 'N');

-- NOTICES
INSERT INTO TB_NOTICES (NOTICE_NO, TITLE, USER_ID, CONTENT, READCOUNT, ORIGINAL_FILEPATH, RENAME_FILEPATH, IMPORTANCE, IMP_END_DATE, NOTICE_DATE)
VALUES (1, '시스템 점검 안내', 'user001', '2025년 7월 18일 00:00 ~ 04:00 시스템 점검이 예정되어 있습니다. 이용에 참고 바랍니다.', 15, NULL, NULL, 'Y', TO_DATE('2025-07-18', 'YYYY-MM-DD'), TO_DATE('2025-07-10', 'YYYY-MM-DD'));

INSERT INTO TB_NOTICES (NOTICE_NO, TITLE, USER_ID, CONTENT, READCOUNT, ORIGINAL_FILEPATH, RENAME_FILEPATH, IMPORTANCE, IMP_END_DATE, NOTICE_DATE)
VALUES (2, '신규 기능 업데이트 안내', 'user001', '금일자로 심리 분석 결과에 대한 시각화 기능이 새롭게 적용되었습니다.', 8, NULL, NULL, 'N', NULL, TO_DATE('2025-07-14', 'YYYY-MM-DD'));

-- TB_USER_REWARDS
INSERT INTO TB_USER_REWARDS (USER_REWARD_ID, USER_ID, REWARD_ID, ACQUIRED_AT, IS_APPLIED, IS_EQUIPPED)
VALUES (1, 'user001', 1, TO_DATE('2024-06-01 10:00:00', 'YYYY-MM-DD HH24:MI:SS'), 1, 1);

INSERT INTO TB_USER_REWARDS (USER_REWARD_ID, USER_ID, REWARD_ID, ACQUIRED_AT, IS_APPLIED, IS_EQUIPPED)
VALUES (2, 'user001', 2, TO_DATE('2024-06-02 11:00:00', 'YYYY-MM-DD HH24:MI:SS'), 0, 0);

INSERT INTO TB_USER_REWARDS (USER_REWARD_ID, USER_ID, REWARD_ID, ACQUIRED_AT, IS_APPLIED, IS_EQUIPPED)
VALUES (3, 'user002', 1, TO_DATE('2024-06-03 09:30:00', 'YYYY-MM-DD HH24:MI:SS'), 0, 0);

INSERT INTO TB_USER_REWARDS (USER_REWARD_ID, USER_ID, REWARD_ID, ACQUIRED_AT, IS_APPLIED, IS_EQUIPPED)
VALUES (4, 'user002', 3, TO_DATE('2024-06-04 14:20:00', 'YYYY-MM-DD HH24:MI:SS'), 1, 1);


--(250717 신선혜 :  INSERT 데이터 추가 )
--INQUIRIES
-- 1. CLOSED
INSERT INTO TB_INQUIRIES (INQUIRY_ID, USER_ID, TITLE, CATEGORY, CONTENT, STATUS, CREATED_AT, LAST_ACTIVITY_AT)
VALUES (1, 'user002', '비밀번호를 잊어버렸어요', '계정관리', '비밀번호를 잊어버렸는데 어떻게 해야 하나요?', 'CLOSED', TO_DATE('2025-03-15', 'YYYY-MM-DD'), TO_DATE('2025-03-15', 'YYYY-MM-DD'));

-- 2. CLOSED
INSERT INTO TB_INQUIRIES (INQUIRY_ID, USER_ID, TITLE, CATEGORY, CONTENT, STATUS, CREATED_AT, LAST_ACTIVITY_AT)
VALUES (2, 'user002', '다크모드가 있었으면 좋겠어요', '기타', '밤에 사용할 때 눈이 아파서 다크모드가 있었으면 좋겠습니다.', 'CLOSED', TO_DATE('2025-04-16', 'YYYY-MM-DD'), TO_DATE('2025-04-17', 'YYYY-MM-DD'));

-- 3. ANSWERED
INSERT INTO TB_INQUIRIES (INQUIRY_ID, USER_ID, TITLE, CATEGORY, CONTENT, STATUS, CREATED_AT, LAST_ACTIVITY_AT)
VALUES (3, 'user002', '상담 내역은 어디서 확인할 수 있나요?', '서비스이용', '챗봇과 나눈 상담 내용을 나중에 다시 볼 수 있나요?', 'ANSWERED', TO_DATE('2025-05-21', 'YYYY-MM-DD'), TO_DATE('2025-05-21', 'YYYY-MM-DD'));

-- 4. PENDING
INSERT INTO TB_INQUIRIES (INQUIRY_ID, USER_ID, TITLE, CATEGORY, CONTENT, STATUS, CREATED_AT, LAST_ACTIVITY_AT)
VALUES (4, 'user002', '아이디 바꾸고 싶어요', '계정관리', '회원 가입할 때 등록한 아이디를 변경할 수 있나요?', 'PENDING', TO_DATE('2025-06-02', 'YYYY-MM-DD'), TO_DATE('2025-06-04', 'YYYY-MM-DD'));

-- 5. PENDING
INSERT INTO TB_INQUIRIES (INQUIRY_ID, USER_ID, TITLE, CATEGORY, CONTENT, STATUS, CREATED_AT, LAST_ACTIVITY_AT)
VALUES (5, 'user002', '챗봇이 중간에 멈춰요', '기술지원', '챗봇이 대답하다가 갑자기 멈춥니다. 해결 방법이 있을까요?', 'PENDING', TO_DATE('2025-07-15', 'YYYY-MM-DD'), TO_DATE('2025-07-16', 'YYYY-MM-DD'));
commit;


--(250717 신선혜 :  INSERT 데이터 추가 )
--COMMENTS
-- 문의 1번(CLOSED) - 답변 있음
INSERT INTO TB_COMMENTS (COMMENT_ID, INQUIRY_ID, USER_ID, CONTENT, CREATED_AT)
VALUES (1, 1, 'user001', '비밀번호 찾기는 로그인 화면에서 "비밀번호 찾기" 버튼을 눌러주세요.', TO_DATE('2025-03-15', 'YYYY-MM-DD'));

-- 문의 2번(CLOSED) - 답변 있음 + 추가 댓글
INSERT INTO TB_COMMENTS (COMMENT_ID, INQUIRY_ID, USER_ID, CONTENT, CREATED_AT)
VALUES (2, 2, 'user001', '다크모드는 현재 준비 중이며 곧 업데이트 예정입니다.', TO_DATE('2025-04-17', 'YYYY-MM-DD'));

INSERT INTO TB_COMMENTS (COMMENT_ID, INQUIRY_ID, USER_ID, CONTENT, CREATED_AT)
VALUES (3, 2, 'user002', '빠른 반영 부탁드립니다.', TO_DATE('2025-04-17', 'YYYY-MM-DD'));

-- 문의 3번(ANSWERED) - 답변만 있음
INSERT INTO TB_COMMENTS (COMMENT_ID, INQUIRY_ID, USER_ID, CONTENT, CREATED_AT)
VALUES (4, 3, 'user001', '상담 내역은 상담 > 우측에 있는 상담기록 메뉴에서 확인하실 수 있습니다.', TO_DATE('2025-05-21', 'YYYY-MM-DD'));

-- 문의 4번(PENDING) - 댓글 진행 중
INSERT INTO TB_COMMENTS (COMMENT_ID, INQUIRY_ID, USER_ID, CONTENT, CREATED_AT)
VALUES (5, 4, 'user001', '현재로선 아이디 변경은 어렵습니다. 이 점 양해 부탁드립니다.', TO_DATE('2025-06-02', 'YYYY-MM-DD'));

INSERT INTO TB_COMMENTS (COMMENT_ID, INQUIRY_ID, USER_ID, CONTENT, CREATED_AT)
VALUES (6, 4, 'user002', '좀 더 멋진 아이디로 바꾸고 싶어요 ㅠㅠ.', TO_DATE('2025-06-04', 'YYYY-MM-DD'));

-- 문의 5번(PENDING) - 댓글 진행 중 (대댓글 포함)
INSERT INTO TB_COMMENTS (COMMENT_ID, INQUIRY_ID, USER_ID, CONTENT, CREATED_AT)
VALUES (7, 5, 'user001', '정확한 증상 확인을 위해 어떤 상황에서 챗봇이 멈추는지 자세히 알려주실 수 있나요?', TO_DATE('2025-07-16', 'YYYY-MM-DD'));

INSERT INTO TB_COMMENTS (COMMENT_ID, INQUIRY_ID, USER_ID, CONTENT, CREATED_AT)
VALUES (8, 5, 'user002', '같은 질문을 여러 번 입력하면 챗봇이 동일한 답변만 반복해서 출력합니다. 예를 들어 "우울해요"라고 세 번 입력하면 같은 문장만 계속 나옵니다.', TO_DATE('2025-07-16', 'YYYY-MM-DD'));

-- BCrypt 해싱된 비밀번호로 업데이트 (123456 -> BCrypt 해싱)
UPDATE TB_USERS SET USER_PWD = '$2a$10$N.zmdr9k7uOCQb376NoUnuTJ8iAt6Z5EHsM8lE9lBOsl7iKTVEFDa' WHERE USER_ID = 'user002';


UPDATE TB_USERS SET USER_PWD = '123456' WHERE USER_ID = 'user001';
UPDATE TB_USERS SET USER_PWD = '654321' WHERE USER_ID = 'user002';

-- TB_QUEST 샘플 데이터
-- user001의 퀘스트들
INSERT INTO TB_QUEST (QUEST_ID, USER_ID, QUEST_NAME, QUEST_POINTS, IS_COMPLETED, CREATED_AT)
VALUES (SEQ_QUEST_QUEST_ID.NEXTVAL, 'user001', '일일 감정 기록하기', 10, 1, TO_DATE('2025-01-15', 'YYYY-MM-DD'));

INSERT INTO TB_QUEST (QUEST_ID, USER_ID, QUEST_NAME, QUEST_POINTS, IS_COMPLETED, CREATED_AT)
VALUES (SEQ_QUEST_QUEST_ID.NEXTVAL, 'user001', '심리 테스트 완료하기', 15, 1, TO_DATE('2025-01-16', 'YYYY-MM-DD'));

INSERT INTO TB_QUEST (QUEST_ID, USER_ID, QUEST_NAME, QUEST_POINTS, IS_COMPLETED, CREATED_AT)
VALUES (SEQ_QUEST_QUEST_ID.NEXTVAL, 'user001', '상담 세션 참여하기', 20, 0, TO_DATE('2025-01-17', 'YYYY-MM-DD'));

INSERT INTO TB_QUEST (QUEST_ID, USER_ID, QUEST_NAME, QUEST_POINTS, IS_COMPLETED, CREATED_AT)
VALUES (SEQ_QUEST_QUEST_ID.NEXTVAL, 'user001', '콘텐츠 읽기', 5, 0, TO_DATE('2025-01-18', 'YYYY-MM-DD'));

-- user002의 퀘스트들
INSERT INTO TB_QUEST (QUEST_ID, USER_ID, QUEST_NAME, QUEST_POINTS, IS_COMPLETED, CREATED_AT)
VALUES (SEQ_QUEST_QUEST_ID.NEXTVAL, 'user002', '프로필 설정하기', 5, 1, TO_DATE('2025-01-10', 'YYYY-MM-DD'));

INSERT INTO TB_QUEST (QUEST_ID, USER_ID, QUEST_NAME, QUEST_POINTS, IS_COMPLETED, CREATED_AT)
VALUES (SEQ_QUEST_QUEST_ID.NEXTVAL, 'user002', '첫 상담 시작하기', 25, 1, TO_DATE('2025-01-11', 'YYYY-MM-DD'));

INSERT INTO TB_QUEST (QUEST_ID, USER_ID, QUEST_NAME, QUEST_POINTS, IS_COMPLETED, CREATED_AT)
VALUES (SEQ_QUEST_QUEST_ID.NEXTVAL, 'user002', '감정 분석 리포트 확인하기', 15, 0, TO_DATE('2025-01-12', 'YYYY-MM-DD'));

INSERT INTO TB_QUEST (QUEST_ID, USER_ID, QUEST_NAME, QUEST_POINTS, IS_COMPLETED, CREATED_AT)
VALUES (SEQ_QUEST_QUEST_ID.NEXTVAL, 'user002', '시뮬레이션 테스트 완료하기', 30, 1, TO_DATE('2025-07-16', 'YYYY-MM-DD'));

INSERT INTO TB_QUEST (QUEST_ID, USER_ID, QUEST_NAME, QUEST_POINTS, IS_COMPLETED, CREATED_AT)
VALUES (SEQ_QUEST_QUEST_ID.NEXTVAL, 'user002', '일일 퀘스트 3개 완료하기', 20, 1, TO_DATE('2025-07-17', 'YYYY-MM-DD'));


-- user002를 위한 상담 샘플 데이터 추가 (AI 상담 로직 고려)
-- 1. TB_COUNSELING_SESSIONS에 새로운 세션 추가
INSERT INTO TB_COUNSELING_SESSIONS (SESSION_ID, USER_ID, TOPIC, METHOD, START_TIME, CREATED_AT)
VALUES (SEQ_COUNSELING_SESSIONS_SESSION_ID.NEXTVAL, 'user002', 'AI 심리 상담 - 스트레스와 감정'
       , 'TEXT', SYSDATE, SYSDATE);

-- 2. TB_COUNSELING_MESSAGES에 메시지 추가 (가장 최근에 생성된 user002의 세션 ID 사용)
-- AI 첫 번째 질문
INSERT INTO TB_COUNSELING_MESSAGES (MESSAGE_ID, SESSION_ID, SENDER, MESSAGE_TYPE,
                                    MESSAGE_CONTENT, MESSAGE_TIME, CREATED_AT)
VALUES (SEQ_COUNSELING_MESSAGES_MESSAGE_ID.NEXTVAL, (SELECT MAX(SESSION_ID) FROM
    TB_COUNSELING_SESSIONS WHERE USER_ID = 'user002'), 'BOT', 'TEXT', '안녕하세요. 오늘 어떤 일이
  있었나요? 편하게 이야기해주세요.', SYSDATE, SYSDATE);

-- 사용자 답변 1
INSERT INTO TB_COUNSELING_MESSAGES (MESSAGE_ID, SESSION_ID, SENDER, MESSAGE_TYPE,
                                    MESSAGE_CONTENT, MESSAGE_TIME, CREATED_AT)
VALUES (SEQ_COUNSELING_MESSAGES_MESSAGE_ID.NEXTVAL, (SELECT MAX(SESSION_ID) FROM
    TB_COUNSELING_SESSIONS WHERE USER_ID = 'user002'), 'USER', 'TEXT', '요즘 직장에서 스트레스가
  너무 심해서 잠도 잘 못 자고 있어요.', SYSDATE + INTERVAL '1' MINUTE, SYSDATE + INTERVAL '1'
    MINUTE);

-- AI 두 번째 질문
INSERT INTO TB_COUNSELING_MESSAGES (MESSAGE_ID, SESSION_ID, SENDER, MESSAGE_TYPE,
                                    MESSAGE_CONTENT, MESSAGE_TIME, CREATED_AT)
VALUES (SEQ_COUNSELING_MESSAGES_MESSAGE_ID.NEXTVAL, (SELECT MAX(SESSION_ID) FROM
    TB_COUNSELING_SESSIONS WHERE USER_ID = 'user002'), 'BOT', 'TEXT', '직장에서의 스트레스로 인해
  수면에도 어려움을 겪고 계시는군요. 그 일로 인해 어떤 감정을 느끼셨나요? 자세히 설명해주실 수
  있나요?', SYSDATE + INTERVAL '2' MINUTE, SYSDATE + INTERVAL '2' MINUTE);

-- 사용자 답변 2
INSERT INTO TB_COUNSELING_MESSAGES (MESSAGE_ID, SESSION_ID, SENDER, MESSAGE_TYPE,
                                    MESSAGE_CONTENT, MESSAGE_TIME, CREATED_AT)
VALUES (SEQ_COUNSELING_MESSAGES_MESSAGE_ID.NEXTVAL, (SELECT MAX(SESSION_ID) FROM
    TB_COUNSELING_SESSIONS WHERE USER_ID = 'user002'), 'USER', 'TEXT', '무기력하고, 모든 일에
  의욕이 없어요. 가끔은 아무것도 하고 싶지 않다는 생각도 들어요.', SYSDATE + INTERVAL '3' MINUTE,
        SYSDATE + INTERVAL '3' MINUTE);

-- AI 세 번째 질문
INSERT INTO TB_COUNSELING_MESSAGES (MESSAGE_ID, SESSION_ID, SENDER, MESSAGE_TYPE,
                                    MESSAGE_CONTENT, MESSAGE_TIME, CREATED_AT)
VALUES (SEQ_COUNSELING_MESSAGES_MESSAGE_ID.NEXTVAL, (SELECT MAX(SESSION_ID) FROM
    TB_COUNSELING_SESSIONS WHERE USER_ID = 'user002'), 'BOT', 'TEXT', '무기력함과 의욕 상실감을
  느끼시는군요. 그런 감정이 들 때, 보통 어떻게 행동하는 편인가요?', SYSDATE + INTERVAL '4' MINUTE
       , SYSDATE + INTERVAL '4' MINUTE);

-- 사용자 답변 3
INSERT INTO TB_COUNSELING_MESSAGES (MESSAGE_ID, SESSION_ID, SENDER, MESSAGE_TYPE,
                                    MESSAGE_CONTENT, MESSAGE_TIME, CREATED_AT)
VALUES (SEQ_COUNSELING_MESSAGES_MESSAGE_ID.NEXTVAL, (SELECT MAX(SESSION_ID) FROM
    TB_COUNSELING_SESSIONS WHERE USER_ID = 'user002'), 'USER', 'TEXT', '주로 혼자 있으려고 하고,
  사람들과의 연락도 피하게 돼요.', SYSDATE + INTERVAL '5' MINUTE, SYSDATE + INTERVAL '5' MINUTE);

-- AI 네 번째 질문 (마지막 질문)
INSERT INTO TB_COUNSELING_MESSAGES (MESSAGE_ID, SESSION_ID, SENDER, MESSAGE_TYPE,
                                    MESSAGE_CONTENT, MESSAGE_TIME, CREATED_AT)
VALUES (SEQ_COUNSELING_MESSAGES_MESSAGE_ID.NEXTVAL, (SELECT MAX(SESSION_ID) FROM
    TB_COUNSELING_SESSIONS WHERE USER_ID = 'user002'), 'BOT', 'TEXT', '혼자만의 시간을 가지며
  사람들과의 교류를 피하게 되시는군요. 마지막으로, 지금 가장 하고 싶은 말이 있다면 자유롭게
  이야기해주세요.', SYSDATE + INTERVAL '6' MINUTE, SYSDATE + INTERVAL '6' MINUTE);

-- 사용자 답변 4
INSERT INTO TB_COUNSELING_MESSAGES (MESSAGE_ID, SESSION_ID, SENDER, MESSAGE_TYPE,
                                    MESSAGE_CONTENT, MESSAGE_TIME, CREATED_AT)
VALUES (SEQ_COUNSELING_MESSAGES_MESSAGE_ID.NEXTVAL, (SELECT MAX(SESSION_ID) FROM
    TB_COUNSELING_SESSIONS WHERE USER_ID = 'user002'), 'USER', 'TEXT', '이 상황에서 벗어나고 싶은데
  어떻게 해야 할지 모르겠어요. 너무 답답해요.', SYSDATE + INTERVAL '7' MINUTE, SYSDATE + INTERVAL
    '7' MINUTE);

-- AI 최종 분석 예고 및 심리 검사 안내 (PROCEED_TO_TEST 토큰 포함)
INSERT INTO TB_COUNSELING_MESSAGES (MESSAGE_ID, SESSION_ID, SENDER, MESSAGE_TYPE,
                                    MESSAGE_CONTENT, MESSAGE_TIME, CREATED_AT)
VALUES (SEQ_COUNSELING_MESSAGES_MESSAGE_ID.NEXTVAL, (SELECT MAX(SESSION_ID) FROM
    TB_COUNSELING_SESSIONS WHERE USER_ID = 'user002'), 'BOT', 'TEXT', '지금까지의 대화 내용을 통해
  직장 스트레스로 인한 무기력감과 의욕 상실, 그리고 대인 관계 회피 경향을 겪고 계심을 알 수
  있었습니다. 이 상황에서 벗어나고 싶은 마음이 크시군요. 이제 더 깊이 있는 이해와 정확한 최종
  분석을 위해 심리 검사를 진행하겠습니다. [PROCEED_TO_TEST]', SYSDATE + INTERVAL '8' MINUTE,
        SYSDATE + INTERVAL '8' MINUTE);

-- TB_GUIDANCE_TYPES에 '감정 관리' GUIDANCE_TYPE이 없으면 추가
INSERT INTO TB_GUIDANCE_TYPES (GUIDANCE_TYPE_ID, GUIDANCE_TYPE_NAME, DESCRIPTION)
SELECT SEQ_GUIDANCE_TYPES_GUIDANCE_TYPE_ID.NEXTVAL, '감정 관리', '감정을 이해하고 조절하는 데
  도움을 주는 가이드'
FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM TB_GUIDANCE_TYPES WHERE GUIDANCE_TYPE_NAME = '감정 관리');

-- 3. TB_COUNSELING_ANALYSIS_SUMMARIES에 상담 분석 요약 추가 (상담의 최종 분석)
INSERT INTO TB_COUNSELING_ANALYSIS_SUMMARIES (SUMMARY_ID, SESSION_ID, SUMMARY_TYPE,
                                              GUIDANCE_TYPE_ID, SUMMARY_CONTENT, CREATED_AT)
VALUES (
           SEQ_COUNSELING_ANALYSIS_SUMMARIES_SUMMARY_ID.NEXTVAL,
           (SELECT MAX(SESSION_ID) FROM TB_COUNSELING_SESSIONS WHERE USER_ID = 'user002'),
           'TEXT',
           (SELECT GUIDANCE_TYPE_ID FROM TB_GUIDANCE_TYPES WHERE GUIDANCE_TYPE_NAME = '감정 관리'
            ORDER BY GUIDANCE_TYPE_ID DESC FETCH FIRST 1 ROW ONLY), -- '감정 관리' GUIDANCE_TYPE_ID 참조
           '사용자는 직장 스트레스(업무량 과다, 상사 관계 어려움)로 인해 무기력감, 의욕 상실, 수면
           장애, 사회적 회피 등의 증상을 겪고 있음. 현재 상황에서 벗어나고자 하는 강한 욕구를 보이나,
           구체적인 해결 방안을 찾지 못해 답답함을 느끼고 있음. AI는 사용자의 감정을 공감하며, 심리 검사를
           통해 더 심층적인 분석을 제안함.',
           SYSDATE + INTERVAL '9' MINUTE
       );

-- 추천 퀘스트 샘플 데이터
INSERT INTO TB_QUEST_RECOMMENDATIONS (RECOMMEND_ID, TITLE, DESCRIPTION, DURATION, REWARD)
VALUES (1, '스트레스 해소 명상', '오늘의 감정 기록을 분석한 결과, 스트레스 수준이 높습니다. 명상을 통해 마음의 평화를 찾아보세요.', '10', '20');

INSERT INTO TB_QUEST_RECOMMENDATIONS (RECOMMEND_ID, TITLE, DESCRIPTION, DURATION, REWARD)
VALUES (2, '기분 전환 산책', '최근 우울감이 증가하는 추세입니다. 가벼운 산책을 통해 기분을 전환해보세요.', '20', '25');

INSERT INTO TB_QUEST_RECOMMENDATIONS (RECOMMEND_ID, TITLE, DESCRIPTION, DURATION, REWARD)
VALUES (3, '감사 일기 작성', '오늘 하루 감사한 일들을 기록하며 긍정적인 마인드를 키워보세요.', '5', '15');

INSERT INTO TB_QUEST_RECOMMENDATIONS (RECOMMEND_ID, TITLE, DESCRIPTION, DURATION, REWARD)
VALUES (4, '따뜻한 차 한 잔', '진정 효과가 있는 허브차나 녹차를 마시며 잠시 휴식을 취해보세요.', '10', '20');

INSERT INTO TB_QUEST_RECOMMENDATIONS (RECOMMEND_ID, TITLE, DESCRIPTION, DURATION, REWARD)
VALUES (5, '긍정적 자기 대화', '거울을 보며 자신에게 긍정적인 말을 해보세요. 자존감 향상에 도움이 됩니다.', '5', '15');

INSERT INTO TB_QUEST_RECOMMENDATIONS (RECOMMEND_ID, TITLE, DESCRIPTION, DURATION, REWARD)
VALUES (6, '창가에서 햇살 쬐기', '자연광을 받으며 비타민 D를 보충하고 기분을 개선해보세요.', '15', '15');

INSERT INTO TB_QUEST_RECOMMENDATIONS (RECOMMEND_ID, TITLE, DESCRIPTION, DURATION, REWARD)
VALUES (7, '친구와 통화하기', '가까운 친구와 대화를 나누며 감정을 공유해보세요.', 30, 25);
INSERT INTO TB_QUEST_RECOMMENDATIONS (RECOMMEND_ID, TITLE, DESCRIPTION, DURATION, REWARD)
VALUES (8, '운동으로 에너지 충전', '가벼운 스트레칭이나 요가로 몸과 마음을 활기차게 만들어보세요.', 15, 20);
INSERT INTO TB_QUEST_RECOMMENDATIONS (RECOMMEND_ID, TITLE, DESCRIPTION, DURATION, REWARD)
VALUES (9, '좋아하는 음악 듣기', '좋아하는 음악을 들으며 기분을 전환하거나 마음을 진정시켜 보세요.', 10, 15);
INSERT INTO TB_QUEST_RECOMMENDATIONS (RECOMMEND_ID, TITLE, DESCRIPTION, DURATION, REWARD)
VALUES (10, '창의적 글쓰기', '자유롭게 글을 쓰며 생각과 감정을 정리해보세요.', 20, 20);
INSERT INTO TB_QUEST_RECOMMENDATIONS (RECOMMEND_ID, TITLE, DESCRIPTION, DURATION, REWARD)
VALUES (11, '자연 속에서 시간 보내기', '공원이나 숲에서 시간을 보내며 자연과 교감해보세요.', 30, 25);
INSERT INTO TB_QUEST_RECOMMENDATIONS (RECOMMEND_ID, TITLE, DESCRIPTION, DURATION, REWARD)
VALUES (12, '목표 설정하기', '작은 목표를 세우고 이를 달성하며 성취감을 느껴보세요.', 15, 20);
INSERT INTO TB_QUEST_RECOMMENDATIONS (RECOMMEND_ID, TITLE, DESCRIPTION, DURATION, REWARD)
VALUES (13, '깊은 호흡 연습', '심호흡을 통해 긴장을 완화하고 마음을 가라앉혀 보세요.', 5, 10);
INSERT INTO TB_QUEST_RECOMMENDATIONS (RECOMMEND_ID, TITLE, DESCRIPTION, DURATION, REWARD)
VALUES (14, '취미 활동 즐기기', '그림 그리기, 요리 등 좋아하는 취미를 즐겨보세요.', 30, 25);
INSERT INTO TB_QUEST_RECOMMENDATIONS (RECOMMEND_ID, TITLE, DESCRIPTION, DURATION, REWARD)
VALUES (15, '감정 일기 쓰기', '현재의 감정을 솔직히 기록하며 내면을 탐구해보세요.', 10, 15);
INSERT INTO TB_QUEST_RECOMMENDATIONS (RECOMMEND_ID, TITLE, DESCRIPTION, DURATION, REWARD)
VALUES (16, '자기 격려 메모 작성', '스스로에게 용기를 주는 메모를 작성해 보세요.', 5, 10);
INSERT INTO TB_QUEST_RECOMMENDATIONS (RECOMMEND_ID, TITLE, DESCRIPTION, DURATION, REWARD)
VALUES (17, '책 읽기', '좋아하는 책이나 가벼운 소설을 읽으며 마음을 채워보세요.', 20, 20);
INSERT INTO TB_QUEST_RECOMMENDATIONS (RECOMMEND_ID, TITLE, DESCRIPTION, DURATION, REWARD)
VALUES (18, '정리 정돈', '주변 환경을 정리하며 마음의 안정감을 찾아보세요.', 15, 15);

-- 행복(1)
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (1, 3, 1); -- 감사 일기 작성
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (1, 5, 2); -- 긍정적 자기 대화
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (1, 7, 3); -- 친구와 통화하기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (1, 8, 4); -- 운동으로 에너지 충전
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (1, 9, 5); -- 좋아하는 음악 듣기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (1, 11, 6); -- 자연 속에서 시간 보내기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (1, 14, 7); -- 취미 활동 즐기기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (1, 17, 8); -- 책 읽기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (1, 6, 9); -- 창가에서 햇살 쬐기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (1, 12, 10); -- 목표 설정하기

-- 슬픔(2)
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (2, 2, 1); -- 산책
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (2, 3, 2); -- 감사일기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (2, 1, 3); -- 명상
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (2, 7, 4); -- 친구와 통화하기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (2, 9, 5); -- 좋아하는 음악 듣기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (2, 10, 6); -- 창의적 글쓰기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (2, 11, 7); -- 자연 속에서 시간 보내기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (2, 15, 8); -- 감정 일기 쓰기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (2, 17, 9); -- 책 읽기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (2, 4, 10); -- 따뜻한 차 한 잔

-- 화남(3)
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (3, 1, 1); -- 명상
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (3, 4, 2); -- 차 한 잔
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (3, 8, 3); -- 운동으로 에너지 충전
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (3, 10, 4); -- 창의적 글쓰기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (3, 11, 5); -- 자연 속에서 시간 보내기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (3, 13, 6); -- 깊은 호흡 연습
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (3, 15, 7); -- 감정 일기 쓰기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (3, 18, 8); -- 정리 정돈
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (3, 9, 9); -- 좋아하는 음악 듣기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (3, 7, 10); -- 친구와 통화하기

-- 평온(4)
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (4, 1, 1); -- 스트레스 해소 명상
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (4, 4, 2); -- 따뜻한 차 한 잔
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (4, 6, 3); -- 창가에서 햇살 쬐기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (4, 9, 4); -- 좋아하는 음악 듣기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (4, 11, 5); -- 자연 속에서 시간 보내기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (4, 13, 6); -- 깊은 호흡 연습
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (4, 14, 7); -- 취미 활동 즐기기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (4, 17, 8); -- 책 읽기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (4, 18, 9); -- 정리 정돈
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (4, 10, 10); -- 창의적 글쓰기

-- 불안(5)
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (5, 1, 1); -- 명상
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (5, 2, 2); -- 산책
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (5, 6, 3); -- 햇살 쬐기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (5, 4, 4); -- 따뜻한 차 한 잔
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (5, 7, 5); -- 친구와 통화하기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (5, 9, 6); -- 좋아하는 음악 듣기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (5, 10, 7); -- 창의적 글쓰기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (5, 13, 8); -- 깊은 호흡 연습
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (5, 15, 9); -- 감정 일기 쓰기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (5, 18, 10); -- 정리 정돈

-- 피곤(6)
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (6, 1, 1); -- 스트레스 해소 명상
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (6, 4, 2); -- 따뜻한 차 한 잔
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (6, 6, 3); -- 창가에서 햇살 쬐기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (6, 9, 4); -- 좋아하는 음악 듣기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (6, 11, 5); -- 자연 속에서 시간 보내기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (6, 13, 6); -- 깊은 호흡 연습
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (6, 17, 7); -- 책 읽기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (6, 18, 8); -- 정리 정돈
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (6, 2, 9); -- 기분 전환 산책
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (6, 7, 10); -- 친구와 통화하기

-- 고민(7)
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (7, 10, 1); -- 창의적 글쓰기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (7, 15, 2); -- 감정 일기 쓰기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (7, 7, 3); -- 친구와 통화하기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (7, 1, 4); -- 스트레스 해소 명상
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (7, 2, 5); -- 기분 전환 산책
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (7, 11, 6); -- 자연 속에서 시간 보내기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (7, 12, 7); -- 목표 설정하기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (7, 13, 8); -- 깊은 호흡 연습
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (7, 17, 9); -- 책 읽기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (7, 18, 10); -- 정리 정돈

-- 자신감(8)
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (8, 5, 1); -- 자기 대화
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (8, 3, 2); -- 감사일기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (8, 12, 3); -- 목표 설정하기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (8, 8, 4); -- 운동으로 에너지 충전
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (8, 14, 5); -- 취미 활동 즐기기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (8, 16, 6); -- 자기 격려 메모 작성
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (8, 7, 7); -- 친구와 통화하기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (8, 9, 8); -- 좋아하는 음악 듣기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (8, 11, 9); -- 자연 속에서 시간 보내기
INSERT INTO TB_EMOTION_QUEST_RECOMM (EMOTION_ID, RECOMMEND_ID, PRIORITY) VALUES (8, 17, 10); -- 책 읽기

-- ========================================
-- 컨텐츠 추천 샘플 데이터
-- ========================================

-- 유튜브 ID만으로 컨텐츠 등록 (제목/설명은 자동 업데이트)
-- 사용자가 제공한 48개 링크 (유효하지 않은 ID 대체)
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (1, 'VQRLujxTm3c', '게임'); -- 마인크래프트 한국어 플레이
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (2, 'ZRhJT2nmvA4', '게임'); -- 배틀그라운드 한국어 스트리밍
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (3, 'ixllGOX0Evw', '게임'); -- 리그 오브 레전드 하이라이트
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (4, 'z2XS_RryJGk', '게임'); -- 오버워치 한국어 플레이
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (5, 'QaFKukn0a6g', '게임'); -- 젤다의 전설 공략
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (6, 'z2uPFxcGaSY', '게임'); -- 배틀그라운드 모바일
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (7, '5nKpApXuM1g', '게임'); -- 스타크래프트 한국어 대회
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (8, 'IC_xwAJzNKc', '게임'); -- 포트나이트 한국어 스트리밍
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (9, 'y1kWjwVKvRA', '게임'); -- 메이플스토리 플레이
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (10, 'LPkhWoYYkCA', '게임'); -- 동물의 숲 한국어 플레이
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (11, 'QhS5a85d3Zc', '게임'); -- 카트라이더 레이싱
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (12, 'TSi0iJYSQ24', '게임'); -- 피파 온라인 매치
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (13, 'dvgZkm1xWPE', '음악'); -- K-팝 댄스 커버
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (14, 'D8VEhcPeSlc', '음악'); -- 한국 발라드 모음
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (15, 'jWQx2f-CErU', '음악'); -- 한국 재즈 플레이리스트
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (16, 'JSFG-IE8n_c', '음악'); -- K-팝 히트곡 모음
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (17, 'cxhqqpVk65Q', '음악'); -- 한국 감성 피아노
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (18, 'T17AR8cVmto', '음악'); -- 한국 드라마 OST
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (19, 'CgCVZdcKcqY', '음악'); -- 한국 힙합 플레이리스트
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (20, 'yebNIHKAC4A', '음악'); -- K-팝 아이돌 무대
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (21, '3Xolk2cFzlo', '음악'); -- 한국 인디 음악
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (22, '88GkYKvnvvI', '음악'); -- 한국 어쿠스틱 음악
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (23, '983bBbJx0Mk', '음악'); -- 한국 감성 록
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (24, '38xYeot-ciM', '음악'); -- 한국 공부용 음악
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (25, 'FKHQAy0ySmc', '요리'); -- 백종원: 간단한 김치볶음밥
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (26, '3HeGP7z7s1U', '요리'); -- 자취요리신: 빠른 라볶이
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (27, 'NP5vh3RZlIM', '요리'); -- 백종원: 된장찌개
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (28, 'Es6muteo2HU', '요리'); -- 이 남자의 cook: 간단한 계란 요리
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (29, 'fEakGqFk18A', '요리'); -- 백종원: 간단한 떡볶이
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (30, '33z8FgPXupk', '요리'); -- 백종원: 김치볶음밥
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (31, 'u77d22_Llls', '요리'); -- 자취요리신: 간단한 김밥
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (32, 'f1gSRra8r48', '요리'); -- 이 남자의 cook: 간단한 파스타
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (33, '7S8w3EBgRBU', '요리'); -- 백종원: 마파두부 레시피
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (34, 'KghjuPuxT7k', '요리'); -- 자취요리신: 간단한 덮밥
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (35, 'sgW9rTUnFJA', '요리'); -- 백종원: 제육볶음 레시피
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (36, '4KyxldzXXUo', '요리'); -- 이 남자의 cook: 간단한 샌드위치
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (37, 'VGkoaHyVUdg', '자연'); -- 제주도 바다 풍경
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (38, 'YFhwEJosUsU', '자연'); -- 설악산 풍경
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (39, 'AY5qcIq5u2g', '자연'); -- 한라산 하이킹
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (40, 'lQ0fS2meTYQ', '자연'); -- 가을 단풍 풍경
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (41, 'B9VRvOKKwfs', '자연'); -- 동해 바다 풍경
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (42, 'RjTPKlKPM3Y', '자연'); -- 지리산 풍경
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (43, 'u1GSweKRC9U', '자연'); -- 강원도 숲 풍경
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (44, 'YFmV_MRSD7M', '자연'); -- 남해 풍경
INSERT INTO TB_CONTENT_REcommendations (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (45, 'RPTYBLDqBt4', '자연'); -- 백두대간 풍경
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (46, 'MUVpFPRImgA', '자연'); -- 한국 계곡 풍경
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (47, 'r9pbtgGky4g', '자연'); -- 한국 섬 풍경
INSERT INTO TB_CONTENT_RECOMMENDATIONS (CONTENT_ID, YOUTUBE_ID, THEME) VALUES (48, 'IdTRKv2jLo4', '자연'); -- 부산 해변 풍경

-- 감정별 컨텐츠 매핑 데이터
-- 행복(1) 감정: 밝고 에너지 넘치는 컨텐츠로 기분을 북돋움
INSERT INTO TB_EMfacial expressions, including a smile, a frown, or a neutral expression, are universal indicators of emotional states. EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (1, 1, 1); -- 마인크래프트 플레이
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (1, 3, 2); -- 리그 오브 레전드 하이라이트
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (1, 5, 3); -- 젤다의 전설 공략
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (1, 10, 4); -- 동물의 숲 플레이
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (1, 11, 5); -- 카트라이더 레이싱
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (1, 13, 6); -- K-팝 댄스 커버
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (1, 16, 7); -- K-팝 히트곡 모음
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (1, 20, 8); -- K-팝 아이돌 무대
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (1, 25, 9); -- 백종원: 김치볶음밥
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (1, 26, 10); -- 자취요리신: 라볶이
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (1, 29, 11); -- 백종원: 떡볶이
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (1, 33, 12); -- 백종원: 마파두부

-- 슬픔(2) 감정: 위로와 공감을 주는 컨텐츠
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (2, 14, 1); -- 한국 발라드 모음
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (2, 15, 2); -- 한국 재즈 플레이리스트
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (2, 17, 3); -- 한국 감성 피아노
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (2, 18, 4); -- 한국 드라마 OST
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (2, 21, 5); -- 한국 인디 음악
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (2, 22, 6); -- 한국 어쿠스틱 음악
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (2, 24, 7); -- 한국 공부용 음악
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (2, 37, 8); -- 제주도 바다 풍경
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (2, 38, 9); -- 설악산 풍경
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (2, 40, 10); -- 가을 단풍 풍경
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (2, 42, 11); -- 지리산 풍경
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (2, 46, 12); -- 한국 계곡 풍경

-- 화남(3) 감정: 에너지 발산과 긴장 완화에 도움 되는 컨텐츠
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (3, 2, 1); -- 배틀그라운드 스트리밍
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (3, 3, 2); -- 리그 오브 레전드 하이라이트
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (3, 4, 3); -- 오버워치 플레이
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (3, 6, 4); -- 배틀그라운드 모바일
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (3, 7, 5); -- 스타크래프트 대회
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (3, 8, 6); -- 포트나이트 스트리밍
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (3, 12, 7); -- 피파 온라인 매치
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (3, 19, 8); -- 한국 힙합 플레이리스트
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (3, 23, 9); -- 한국 감성 록
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (3, 25, 10); -- 백종원: 김치볶음밥
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (3, 28, 11); -- 이 남자의 cook: 계란 요리
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (3, 35, 12); -- 백종원: 제육볶음

-- 평온(4) 감정: 마음을 안정시키고 평화를 주는 컨텐츠
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (4, 15, 1); -- 한국 재즈 플레이리스트
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (4, 17, 2); -- 한국 감성 피아노
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (4, 18, 3); -- 한국 드라마 OST
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (4, 22, 4); -- 한국 어쿠스틱 음악
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (4, 24, 5); -- 한국 공부용 음악
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (4, 27, 6); -- 백종원: 된장찌개
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (4, 37, 7); -- 제주도 바다 풍경
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (4, 38, 8); -- 설악산 풍경
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (4, 39, 9); -- 한라산 하이킹
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (4, 41, 10); -- 동해 바다 풍경
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (4, 43, 11); -- 강원도 숲 풍경
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (4, 46, 12); -- 한국 계곡 풍경

-- 불안(5) 감정: 긴장을 완화하고 안정감을 주는 컨텐츠
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (5, 14, 1); -- 한국 발라드 모음
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (5, 15, 2); -- 한국 재즈 플레이리스트
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (5, 17, 3); -- 한국 감성 피아노
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (5, 24, 4); -- 한국 공부용 음악
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (5, 27, 5); -- 백종원: 된장찌개
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (5, 30, 6); -- 백종원: 김치볶음밥
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (5, 36, 7); -- 이 남자의 cook: 샌드위치
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (5, 37, 8); -- 제주도 바다 풍경
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (5, 40, 9); -- 가을 단풍 풍경
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (5, 42, 10); -- 지리산 풍경
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (5, 44, 11); -- 남해 풍경
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (5, 48, 12); -- 부산 해변 풍경

-- 피곤(6) 감정: 휴식과 편안함을 주는 컨텐츠
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (6, 14, 1); -- 한국 발라드 모음
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (6, 15, 2); -- 한국 재즈 플레이리스트
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (6, 17, 3); -- 한국 감성 피아노
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (6, 22, 4); -- 한국 어쿠스틱 음악
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (6, 24, 5); -- 한국 공부용 음악
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (6, 27, 6); -- 백종원: 된장찌개
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (6, 30, 7); -- 백종원: 김치볶음밥
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (6, 31, 8); -- 자취요리신: 김밥
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (6, 37, 9); -- 제주도 바다 풍경
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (6, 39, 10); -- 한라산 하이킹
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (6, 43, 11); -- 강원도 숲 풍경
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (6, 47, 12); -- 한국 섬 풍경

-- 고민(7) 감정: 생각을 정리하고 창의력을 자극하는 컨텐츠
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (7, 1, 1); -- 마인크래프트 플레이
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (7, 5, 2); -- 젤다의 전설 공략
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (7, 9, 3); -- 메이플스토리 플레이
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (7, 10, 4); -- 동물의 숲 플레이
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (7, 14, 5); -- 한국 발라드 모음
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (7, 17, 6); -- 한국 감성 피아노
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (7, 21, 7); -- 한국 인디 음악
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (7, 28, 8); -- 이 남자의 cook: 계란 요리
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (7, 31, 9); -- 자취요리신: 김밥
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (7, 32, 10); -- 이 남자의 cook: 파스타
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (7, 33, 11); -- 백종원: 마파두부
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (7, 34, 12); -- 자취요리신: 덮밥

-- 자신감(8) 감정: 동기부여와 성취감을 주는 컨텐츠
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (8, 3, 1); -- 리그 오브 레전드 하이라이트
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (8, 4, 2); -- 오버워치 플레이
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (8, 7, 3); -- 스타크래프트 대회
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (8, 8, 4); -- 포트나이트 스트리밍
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (8, 11, 5); -- 카트라이더 레이싱
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (8, 12, 6); -- 피파 온라인 매치
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (8, 13, 7); -- K-팝 댄스 커버
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (8, 16, 8); -- K-팝 히트곡 모음
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (8, 19, 9); -- 한국 힙합 플레이리스트
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (8, 20, 10); -- K-팝 아이돌 무대
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (8, 25, 11); -- 백종원: 김치볶음밥
INSERT INTO TB_EMOTION_CONTENT_RECOMM (EMOTION_ID, CONTENT_ID, PRIORITY) VALUES (8, 35, 12); -- 백종원: 제육볶음

COMMIT;

-- TB_GUIDANCE_TYPES 샘플 데이터 삽입
-- 이미 존재하는 데이터와의 충돌을 피하기 위해, 필요하다면 기존 데이터를 삭제하거나
-- INSERT INTO ... SELECT ... WHERE NOT EXISTS (...) 구문을 사용할 수 있습니다.
-- 여기서는 간단한 INSERT 문을 제공합니다.

INSERT INTO TB_GUIDANCE_TYPES (GUIDANCE_TYPE_ID, GUIDANCE_TYPE_NAME, DESCRIPTION)
VALUES (SEQ_GUIDANCE_TYPES_GUIDANCE_TYPE_ID.NEXTVAL, '스트레스', '스트레스 관리 및 해소에 대한 가이드');

INSERT INTO TB_GUIDANCE_TYPES (GUIDANCE_TYPE_ID, GUIDANCE_TYPE_NAME, DESCRIPTION)
VALUES (SEQ_GUIDANCE_TYPES_GUIDANCE_TYPE_ID.NEXTVAL, '불안', '불안감 해소 및 심리적 안정에 대한 가이드');

INSERT INTO TB_GUIDANCE_TYPES (GUIDANCE_TYPE_ID, GUIDANCE_TYPE_NAME, DESCRIPTION)
VALUES (SEQ_GUIDANCE_TYPES_GUIDANCE_TYPE_ID.NEXTVAL, '관계', '대인 관계 개선 및 소통에 대한 가이드');

INSERT INTO TB_GUIDANCE_TYPES (GUIDANCE_TYPE_ID, GUIDANCE_TYPE_NAME, DESCRIPTION)
VALUES (SEQ_GUIDANCE_TYPES_GUIDANCE_TYPE_ID.NEXTVAL, '자아성찰', '자기 이해 및 내면 탐색에 대한 가이드');

INSERT INTO TB_GUIDANCE_TYPES (GUIDANCE_TYPE_ID, GUIDANCE_TYPE_NAME, DESCRIPTION)
VALUES (SEQ_GUIDANCE_TYPES_GUIDANCE_TYPE_ID.NEXTVAL, '행복', '긍정적인 감정 증진 및 행복 추구에 대한 가이드');

INSERT INTO TB_GUIDANCE_TYPES (GUIDANCE_TYPE_ID, GUIDANCE_TYPE_NAME, DESCRIPTION)
VALUES (SEQ_GUIDANCE_TYPES_GUIDANCE_TYPE_ID.NEXTVAL, '우울', '우울감 극복 및 정서적 지지에 대한 가이드');

INSERT INTO TB_GUIDANCE_TYPES (GUIDANCE_TYPE_ID, GUIDANCE_TYPE_NAME, DESCRIPTION)
VALUES (SEQ_GUIDANCE_TYPES_GUIDANCE_TYPE_ID.NEXTVAL, '분노', '분노 조절 및 감정 표현에 대한 가이드');

INSERT INTO TB_GUIDANCE_TYPES (GUIDANCE_TYPE_ID, GUIDANCE_TYPE_NAME, DESCRIPTION)
VALUES (SEQ_GUIDANCE_TYPES_GUIDANCE_TYPE_ID.NEXTVAL, '슬픔', '슬픔을 다루고 애도하는 과정에 대한 가이드');

INSERT INTO TB_GUIDANCE_TYPES (GUIDANCE_TYPE_ID, GUIDANCE_TYPE_NAME, DESCRIPTION)
VALUES (SEQ_GUIDANCE_TYPES_GUIDANCE_TYPE_ID.NEXTVAL, '성장', '개인적 성장 및 잠재력 개발에 대한 가이드');

INSERT INTO TB_GUIDANCE_TYPES (GUIDANCE_TYPE_ID, GUIDANCE_TYPE_NAME, DESCRIPTION)
VALUES (SEQ_GUIDANCE_TYPES_GUIDANCE_TYPE_ID.NEXTVAL, '가족', '가족 관계 및 갈등 해결에 대한 가이드');

INSERT INTO TB_GUIDANCE_TYPES (GUIDANCE_TYPE_ID, GUIDANCE_TYPE_NAME, DESCRIPTION)
VALUES (SEQ_GUIDANCE_TYPES_GUIDANCE_TYPE_ID.NEXTVAL, '직장', '직장 생활 및 경력 개발에 대한 가이드');

INSERT INTO TB_GUIDANCE_TYPES (GUIDANCE_TYPE_ID, GUIDANCE_TYPE_NAME, DESCRIPTION)
VALUES (SEQ_GUIDANCE_TYPES_GUIDANCE_TYPE_ID.NEXTVAL, '기타', '분류되지 않은 일반적인 상담 주제에 대한 가이드');

COMMIT;


ALTER TABLE TB_PSYCHOLOGICAL_IMAGE_RESULTS
    ADD (TEST_TYPE VARCHAR2(100));

ALTER TABLE TB_PSYCHOLOGICAL_SCALE_ANSWERS
    ADD (TEST_TYPE VARCHAR2(100));
ALTER TABLE TB_PSYCHOLOGICAL_SCALE_RESULTS
    ADD (TEST_TYPE VARCHAR2(100));

ALTER TABLE TB_USER_ANALYSIS_SUMMARY ADD ANALYSIS_COMPLETED NUMBER(1) DEFAULT 0 NOT NULL;

ALTER TABLE TB_USER_ANALYSIS_SUMMARY ADD INDIVIDUAL_RESULTS_JSON CLOB;


-- 1. 기존 외래 키 제약 조건 삭제
ALTER TABLE TB_USER_ANALYSIS_SUMMARY DROP CONSTRAINT FK_SUMMARY_EMOTION;

-- 2. 기존 컬럼 삭제
ALTER TABLE TB_USER_ANALYSIS_SUMMARY DROP COLUMN EMOTION_LOG_ID;

-- 3. 새로운 EMOTION_ID 컬럼 추가 (NULL을 허용)
ALTER TABLE TB_USER_ANALYSIS_SUMMARY ADD EMOTION_ID NUMBER(19);

-- 4. 새로운 외래 키 제약 조건 추가 (TB_EMOTIONS 테이블 참조)
--    (만약 참조하는 감정이 삭제될 경우, 이 필드는 NULL로 설정되도록 ON DELETE SET NULL 옵션 추가)
ALTER TABLE TB_USER_ANALYSIS_SUMMARY
    ADD CONSTRAINT FK_SUMMARY_DOMINANT_EMOTION
        FOREIGN KEY (EMOTION_ID)
            REFERENCES TB_EMOTIONS(EMOTION_ID)
            ON DELETE SET NULL;

-- 5. 새로 추가된 컬럼에 대한 코멘트 추가
COMMENT ON COLUMN TB_USER_ANALYSIS_SUMMARY.EMOTION_ID IS 'AI 최종 분석으로 도출된 핵심 감정 ID (TB_EMOTIONS 참조)';

ALTER TABLE TB_USER_ANALYSIS_SUMMARY ADD (DOMINANT_EMOTION VARCHAR2(50));
COMMENT ON COLUMN TB_USER_ANALYSIS_SUMMARY.DOMINANT_EMOTION IS 'AI가 분석한 사용자의 주요 감정';


COMMIT;

-- TB_USER_ANALYSIS_SUMMARY 테이블에 STRESS_SCORE 컬럼 추가
ALTER TABLE TB_USER_ANALYSIS_SUMMARY
    ADD STRESS_SCORE NUMBER(5,0); -- NUMBER(5,0)은 총 5자리 정수를 의미합니다.

-- TB_USER_ANALYSIS_SUMMARY 테이블에 DEPRESSION_SCORE 컬럼 추가
ALTER TABLE TB_USER_ANALYSIS_SUMMARY
    ADD DEPRESSION_SCORE NUMBER(5,0);

-- (선택 사항이지만 권장) 추가된 컬럼에 대한 코멘트 추가
COMMENT ON COLUMN TB_USER_ANALYSIS_SUMMARY.STRESS_SCORE IS '스트레스 검사 점수';
COMMENT ON COLUMN TB_USER_ANALYSIS_SUMMARY.DEPRESSION_SCORE IS '우울증 검사 점수';

commit;

select *
from TB_USER_ANALYSIS_SUMMARY;

-- TB_SIMULATION_SETTINGS 테이블에 CURRENT_QUESTION_NUMBER 컬럼 추가
ALTER TABLE TB_SIMULATION_SETTINGS
    ADD CURRENT_QUESTION_NUMBER NUMBER(5,0); -- NUMBER(5,0)은 총 5자리 정수를 의미합니다.

-- TB_SIMULATION_SETTINGS 테이블에 TOTAL_QUESTIONS_COUNT 컬럼 추가
ALTER TABLE TB_SIMULATION_SETTINGS
    ADD TOTAL_QUESTIONS_COUNT NUMBER(5,0);

-- TB_SIMULATION_SETTINGS 테이블에 INITIAL_STRESS_SCORE 컬럼 추가
ALTER TABLE TB_SIMULATION_SETTINGS
    ADD INITIAL_STRESS_SCORE NUMBER(5,0);

-- TB_SIMULATION_SETTINGS 테이블에 INITIAL_DEPRESSION_SCORE 컬럼 추가
ALTER TABLE TB_SIMULATION_SETTINGS
    ADD INITIAL_DEPRESSION_SCORE NUMBER(5,0);

-- (선택 사항이지만 권장) 추가된 컬럼에 대한 코멘트 추가
COMMENT ON COLUMN TB_SIMULATION_SETTINGS.CURRENT_QUESTION_NUMBER IS '현재 진행 중인 시뮬레이션 질문 번호';
COMMENT ON COLUMN TB_SIMULATION_SETTINGS.TOTAL_QUESTIONS_COUNT IS '시뮬레이션의 총 질문 개수';
COMMENT ON COLUMN TB_SIMULATION_SETTINGS.INITIAL_STRESS_SCORE IS '시뮬레이션 시작 전 사용자 스트레스 검사 점수';
COMMENT ON COLUMN TB_SIMULATION_SETTINGS.INITIAL_DEPRESSION_SCORE IS '시뮬레이션 시작 전 사용자 우울감 검사 점수';

-- 2. 시퀀스 생성 (아직 없다면)
-- 시뮬레이션 사용자 결과 ID를 위한 시퀀스 생성
CREATE SEQUENCE SEQ_TB_SIMULATION_USER_RESULTS_ID
    START WITH 1
    INCREMENT BY 1
    NOCACHE
NOCYCLE;

CREATE SEQUENCE SEQ_COMMON_QUESTIONS_QID
    START WITH 1
    INCREMENT BY 1
    NOCACHE
NOCYCLE;
commit;

--(250728 신선혜 :  로그 데이터 추가 )
-- 1. user001 로그인 성공
INSERT INTO TB_SYSTEM_LOGS (LOG_ID, USER_ID, ACTION, SEVERITY, BEFORE_DATA, AFTER_DATA, CREATED_AT)
VALUES (1, 'user001', '로그인 시도', 'INFO', NULL, '로그인 성공', SYSDATE);

-- 2. user001 로그인 실패
INSERT INTO TB_SYSTEM_LOGS (LOG_ID, USER_ID, ACTION, SEVERITY, BEFORE_DATA, AFTER_DATA, CREATED_AT)
VALUES (2, 'user001', '로그인 시도', 'WARN', NULL, '로그인 실패 - 비밀번호 오류', SYSDATE);

-- 3. user001 사용자 정보 변경 (이메일 수정)
INSERT INTO TB_SYSTEM_LOGS (LOG_ID, USER_ID, ACTION, SEVERITY, BEFORE_DATA, AFTER_DATA, CREATED_AT)
VALUES (3, 'user001', '사용자 정보 변경', 'INFO', 'email=test@naver.com', 'email=changed@domain.com', SYSDATE);

-- 4. user002 로그인 성공
INSERT INTO TB_SYSTEM_LOGS (LOG_ID, USER_ID, ACTION, SEVERITY, BEFORE_DATA, AFTER_DATA, CREATED_AT)
VALUES (4, 'user002', '로그인 시도', 'INFO', NULL, '로그인 성공', SYSDATE);

-- 5. user002 로그인 실패
INSERT INTO TB_SYSTEM_LOGS (LOG_ID, USER_ID, ACTION, SEVERITY, BEFORE_DATA, AFTER_DATA, CREATED_AT)
VALUES (5, 'user002', '로그인 시도', 'WARN', NULL, '로그인 실패 - 존재하지 않는 아이디', SYSDATE);

-- 6. user002 사용자 정보 변경 (비밀번호 변경)
INSERT INTO TB_SYSTEM_LOGS (LOG_ID, USER_ID, ACTION, SEVERITY, BEFORE_DATA, AFTER_DATA, CREATED_AT)
VALUES (6, 'user002', '사용자 정보 변경', 'INFO', 'userPwd=********', 'userPwd=********', SYSDATE);

-- 7. 시스템 오류 발생 (예: DB 연결 실패)
INSERT INTO TB_SYSTEM_LOGS (LOG_ID, USER_ID, ACTION, SEVERITY, BEFORE_DATA, AFTER_DATA, CREATED_AT)
VALUES (7, 'user001', '시스템 오류 발생', 'ERROR', NULL, 'DB 연결 실패: ORA-12170', SYSDATE);

-- 문구 샘플데이터
--INSERT INTO TB_PSYCHOLOGY_CARD (
--    ID, MESSAGE, KEYWORD, CREATED_AT, CARD_DESIGN_TYPE, DESIGN_IMAGE_URL, DESIGN_COLOR_SCHEME
--) VALUES (
--    TB_PSYCHOLOGY_CARD_SEQ.NEXTVAL,
--    '오늘은 당신에게 행운이 가득할 것입니다. 긍정적인 마음으로 하루를 시작하세요.',
--    '행운의 별',
--    SYSDATE,
--    'FORTUNE',
--    'https://example.com/images/star.jpg',
--    '#FFD700'
--);
--
--INSERT INTO TB_PSYCHOLOGY_CARD (
--    ID, MESSAGE, KEYWORD, CREATED_AT, CARD_DESIGN_TYPE, DESIGN_IMAGE_URL, DESIGN_COLOR_SCHEME
--) VALUES (
--    TB_PSYCHOLOGY_CARD_SEQ.NEXTVAL,
--    '새로운 시작의 기회가 찾아올 것입니다. 용기를 가지고 도전해보세요.',
--    '희망의 새싹',
--    SYSDATE,
--    'MOTIVATION',
--    'https://example.com/images/sprout.jpg',
--    '#90EE90'
--);
--
--INSERT INTO TB_PSYCHOLOGY_CARD (
--    ID, MESSAGE, KEYWORD, CREATED_AT, CARD_DESIGN_TYPE, DESIGN_IMAGE_URL, DESIGN_COLOR_SCHEME
--) VALUES (
--    TB_PSYCHOLOGY_CARD_SEQ.NEXTVAL,
--    '현재의 어려움은 당신을 더욱 성장시킬 것입니다. 인내심을 가지세요.',
--    '지혜의 나무',
--    SYSDATE,
--    'ADVICE',
--    'https://example.com/images/tree.jpg',
--    '#8FBC8F'
--);


COMMIT;